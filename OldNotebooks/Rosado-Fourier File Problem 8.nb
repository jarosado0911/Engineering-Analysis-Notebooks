(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    327287,       5999]
NotebookOptionsPosition[    326192,       5960]
NotebookOutlinePosition[    326568,       5977]
CellTagsIndexPosition[    326525,       5974]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.642014153702651*^9, 3.6420141753118753`*^9}, {
   3.6420142547070913`*^9, 3.642014281756621*^9}, {3.642014346432249*^9, 
   3.642014357151434*^9}, {3.642014454977804*^9, 3.64201447724582*^9}, 
   3.642015748059024*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Problem", " ", "#8", " ", "part", " ", "a"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "M", ",", "x", ",", "n", ",", "L", ",", "f"}],
     "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "*", 
            RowBox[{"Pi", "/", "L"}]}], ")"}], "*", "x"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"(", "L", ")"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "*", 
            RowBox[{"Pi", "/", "L"}]}], ")"}], "*", "x"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"(", "L", ")"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", "1"}], "\[IndentingNewLine]", 
   RowBox[{"L", ":=", "Pi"}], "\[IndentingNewLine]", 
   RowBox[{"a", "[", "n", "]"}], "\[IndentingNewLine]", 
   RowBox[{"b", "[", "n", "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myFCos", "[", 
     RowBox[{"x_", ",", "M_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", "n", "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "*", 
            RowBox[{"Pi", "/", "L"}]}], ")"}], "*", "x"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], "/", "2"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myFSin", "[", 
     RowBox[{"x_", ",", "M_"}], "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"b", "[", "n", "]"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "*", 
           RowBox[{"Pi", "/", "L"}]}], ")"}], "*", "x"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "M"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"myFCos", "[", 
          RowBox[{"x", ",", "10"}], "]"}], "+", 
         RowBox[{"myFSin", "[", 
          RowBox[{"x", ",", "10"}], "]"}]}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"myFSin", "[", 
         RowBox[{"x", ",", "10"}], "]"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"myFCos", "[", 
         RowBox[{"x", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "L"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"f", "[", "L", "]"}], "+", "0.1"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Red", ",", "Green", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<f[x]\>\"", ",", "\"\<Fourier Series\>\"", ",", 
        "\"\<Fourier Sine\>\"", ",", "\"\<Fourier Cosine\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Graph", " ", "of", " ", "part", " ", "a", " ", "f", 
      RowBox[{"(", "x", ")"}]}], " ", "=", " ", "1"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.641834283734397*^9, 3.641834360482943*^9}, {
   3.641834401233581*^9, 3.641834421511512*^9}, {3.641835084050715*^9, 
   3.6418350849054623`*^9}, {3.641835169632084*^9, 3.641835170020853*^9}, {
   3.6418352260670033`*^9, 3.6418352411945553`*^9}, 3.641835825951294*^9, {
   3.641835940683004*^9, 3.641835941066402*^9}, {3.641836129189826*^9, 
   3.64183613624205*^9}, {3.641836242317315*^9, 3.641836257111219*^9}, {
   3.641836338842355*^9, 3.641836340016199*^9}, {3.641836382808826*^9, 
   3.641836385685823*^9}, {3.641836418409902*^9, 3.641836418608081*^9}, {
   3.6418366888091297`*^9, 3.641836693166761*^9}, {3.641836806858074*^9, 
   3.6418368070810337`*^9}, {3.641836870097514*^9, 3.641836882804965*^9}, {
   3.641836930083267*^9, 3.641836988945621*^9}, {3.641845115998118*^9, 
   3.641845120362591*^9}, {3.641845171317185*^9, 3.641845223606123*^9}, {
   3.6418452847736692`*^9, 3.64184529030402*^9}, {3.641845374445253*^9, 
   3.641845374875166*^9}, {3.641845609368451*^9, 3.641845662692718*^9}, {
   3.641845701474565*^9, 3.641845705838829*^9}, {3.641845906725554*^9, 
   3.641845952138608*^9}, {3.6418459830696583`*^9, 3.641846007428692*^9}, {
   3.641846379923595*^9, 3.641846381042179*^9}, {3.6418464923054543`*^9, 
   3.641846492448206*^9}, {3.641846660993541*^9, 3.641846663694392*^9}, {
   3.641846696496064*^9, 3.641846705916152*^9}, {3.6418467634483767`*^9, 
   3.641846764462805*^9}, {3.6418469881278*^9, 3.641846989982155*^9}, {
   3.641847221633686*^9, 3.641847223399438*^9}, {3.641847329768937*^9, 
   3.6418473926462584`*^9}, {3.641847467018785*^9, 3.641847467944583*^9}, {
   3.641856671991737*^9, 3.641856698362226*^9}, {3.642013920373341*^9, 
   3.642013926409999*^9}, {3.6420139786727753`*^9, 3.642014017933922*^9}, {
   3.64201574992452*^9, 3.642015786457692*^9}, {3.642016032953394*^9, 
   3.642016257174012*^9}, {3.642016351432846*^9, 3.642016466784754*^9}, {
   3.642016497463353*^9, 3.6420165014749737`*^9}, {3.642016549972763*^9, 
   3.642016614443193*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sin", "[", 
   RowBox[{"n", " ", "\[Pi]"}], "]"}], 
  RowBox[{"n", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.642015794671422*^9, 3.642016034208501*^9, {3.642016065920753*^9, 
   3.642016257661997*^9}, 3.6420163543995256`*^9, {3.642016397865522*^9, 
   3.642016467453724*^9}, 3.64201650220506*^9, 3.642016592816989*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", 
   RowBox[{"Cos", "[", 
    RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{"n", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.642015794671422*^9, 3.642016034208501*^9, {3.642016065920753*^9, 
   3.642016257661997*^9}, 3.6420163543995256`*^9, {3.642016397865522*^9, 
   3.642016467453724*^9}, 3.64201650220506*^9, 3.642016592871173*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzbyf69xj00I7BjD4YO87s+rIjEnz7WH8Hvl9c6dN
Wg/nv/rO9t+x+ACcb/F3YsDmghNw/sl7Ec1MyhfgfAenkN/Lkq7A+VEFnh+2
Rt6A8/cpajUdWHoHzg+ZobX4bt4DOF+ada/zhLRHcH678dFNBzqewPmu7l4J
y9qewflHO7+otVS9QLi3V2TP/Rmv4PzE8o39Hya9gfNrlY4Y1m9/B+fr/av9
xpT5Ac4/HhvxWSHlI5xvOC/3em3JJzjfJfBg1Naiz3C+9lP/o9ptX+D8IoFC
m3lTvsL5yesuBL2e8A3OV9PNDihf9B3Onyzn8vbuwh9wfsLy9dMc5vyE8xkE
w9Qfrf4F53u+tQqPW/kbzk9ZFZUnuecPnP/wH8+kCyf/wvlsx/6GJB39B+f/
z9X8b3TtP5wfcMRTJT+LwQHGD5T1OO/0HMHf8+zx2615jHB+9Uu5GLG3CP7i
mO+2YmVMcL4CZ34+8zcE34/RYHleMTOc/zSzL6jyN4J/gbvHt7CKBc5XlVPf
w8HCCudr1XAbynUj+C3C/V8VONngfHfpDbqHJyL4cTEFW4ME2eF8tZeVzgl9
CH74MwVXXjEOOP+uTPq05VMQfHYdjsLA2wi+ofVK79+KnHA+AEq0/UI=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
OR1koee/AADih8xR
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0]], 
       LineBox[CompressedData["
1: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
BzFkiz4/UbUx
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzbyf69xj00I7BjB4YO87s+rIjEnz7WH8Hvl9c6dN
Wg/nv/rO9t+x+ACcb/F3YsDmghNw/sl7Ec1MyhfgfAenkN/Lkq7A+VEFnh+2
Rt6A8/cpajUdWHoHzg+ZobX4bt4DOF+ada/zhLRHcH678dFNBzqewPmu7l4J
y9qewflHO7+otVS9QLi3V2TP/Rmv4PzE8o39Hya9gfNrlY4Y1m9/B+fr/av9
xpT5Ac4/HhvxWSHlI5xvOC/3em3JJzjfJfBg1Naiz3C+9lP/o9ptX+D8IoFC
m3lTvsL5yesuBL2e8A3OV9PNDihf9B3Onyzn8vbuwh9wfsLy9dMc5vyE8xkE
w9Qfrf4F53u+tQqPW/kbzk9ZFZUnuecPnP/wH8+kCyf/wvlsx/6GJB39B+f/
z9X8b3TtP5wfcMRTJT+LwQHGD5T1OO/0HMHf8+zx2615jHB+9Uu5GLG3CP7i
mO+2YmVMcL4CZ34+8zcE34/RYHleMTOc/zSzL6jyN4J/gbvHt7CKBc5XlVPf
w8HCCudr1XAbynUj+C3C/V8VONngfHfpDbqHJyL4cTEFW4ME2eF8tZeVzgl9
CH74MwVXXjEOOP+uTPq05VMQfHYdjsLA2wi+ofVK79+KnHA+ABXp+gI=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 3.1415925894756573`}, {0, 1.1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"f[x]\"", "\"Fourier Series\"", "\"Fourier Sine\"", 
       "\"Fourier Cosine\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.642015794671422*^9, 3.642016034208501*^9, {3.642016065920753*^9, 
   3.642016257661997*^9}, 3.6420163543995256`*^9, {3.642016397865522*^9, 
   3.642016467453724*^9}, 3.64201650220506*^9, 3.642016595566328*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Problem", " ", "#8", " ", "part", " ", "b", " ", "f", 
     RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
    RowBox[{"1", "+", "x"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "M", ",", "x", ",", "n", ",", "L", ",", "f"}],
     "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "*", 
            RowBox[{"Pi", "/", "L"}]}], ")"}], "*", "x"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"(", "L", ")"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "*", 
            RowBox[{"Pi", "/", "L"}]}], ")"}], "*", "x"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"(", "L", ")"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{"1", "+", "x"}]}], "\[IndentingNewLine]", 
   RowBox[{"L", ":=", "Pi"}], "\[IndentingNewLine]", 
   RowBox[{"a", "[", "n", "]"}], "\[IndentingNewLine]", 
   RowBox[{"b", "[", "n", "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Here", " ", "is", " ", "where", " ", "i", " ", "form", " ", "sine", " ", 
     "and", " ", "cosing", " ", "series", " ", "expansion"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myFCos", "[", 
     RowBox[{"x_", ",", "M_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", "n", "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "*", 
            RowBox[{"Pi", "/", "L"}]}], ")"}], "*", "x"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], "/", "2"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myFSin", "[", 
     RowBox[{"x_", ",", "M_"}], "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"b", "[", "n", "]"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "*", 
           RowBox[{"Pi", "/", "L"}]}], ")"}], "*", "x"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "M"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Here", " ", "is", " ", "where", " ", "i", " ", "form", " ", "the", " ", 
     "plot"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"myFCos", "[", 
          RowBox[{"x", ",", "10"}], "]"}], "+", 
         RowBox[{"myFSin", "[", 
          RowBox[{"x", ",", "10"}], "]"}]}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"myFSin", "[", 
         RowBox[{"x", ",", "10"}], "]"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"myFCos", "[", 
         RowBox[{"x", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"-", "L"}], "]"}], ",", 
        RowBox[{"f", "[", "L", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Red", ",", "Green", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<f[x]\>\"", ",", "\"\<Fourier Series\>\"", ",", 
        "\"\<Fourier Sine\>\"", ",", "\"\<Fourier Cosine\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Graph", " ", "of", " ", "part", " ", "b", " ", "f", 
      RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
     RowBox[{"1", "+", "x"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.642014543198575*^9, 3.642014650067816*^9}, {
  3.642015496805434*^9, 3.642015518202118*^9}, {3.642015734270619*^9, 
  3.642015734461659*^9}, {3.642016632758875*^9, 3.642016647308674*^9}, {
  3.642016677689645*^9, 3.642016732397201*^9}, {3.642016762693157*^9, 
  3.6420167698081503`*^9}, {3.64201684418381*^9, 3.642016844534089*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{"n", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.6420145856898108`*^9, 3.642014650418359*^9, {3.642015501025292*^9, 
   3.64201551899778*^9}, 3.642015735115917*^9, 3.642016651264694*^9, 
   3.642016738557928*^9, 3.642016770974319*^9, 3.6420168475738697`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "n", " ", "\[Pi]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "\[Pi]"}], "]"}]}]}], 
  RowBox[{
   SuperscriptBox["n", "2"], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.6420145856898108`*^9, 3.642014650418359*^9, {3.642015501025292*^9, 
   3.64201551899778*^9}, 3.642015735115917*^9, 3.642016651264694*^9, 
   3.642016738557928*^9, 3.642016770974319*^9, 3.642016847707321*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0]], 
       LineBox[CompressedData["
1:eJwt1HtUjHkcBvB5Z5rmfU2Xn6arUjqYEsfuVFiS35d1WVFS2j3WdpxtUthN
ZDdnXU7IrmkqSoVsFOkiTlRua7Z+b8tQia2RTsI0UkNDms4020219uz7x3M+
5/n3+ePxjIoP28Ln8XjBn/KfQattvhz1ZNj/pViHbUlG2p3hpFidwnjWcQrD
SbF76jRDMjuGk2IvrjpVvpXPcFLs+IppU1o7aU4eW7nMt/9aIc3JY10Xf50f
M5Pm/NRD5PZZEhE7P+++t9RrnCT0ygxdEku2q13eUu/1kcSY46oWuQjZRsPz
mJ99R4jCLT5nPWPBooVan0K7IUI1y9rSxQKWf0F+zdXpH1J68Q+/1CGKDV29
O9ax30R6deWH0ww8tr02UujytJ9IIh5Gx7ycINKyk/WNd/pIifSueZ5qjIQE
//buh8R3pMduyVeh1aNEM3N/RsHeN2RbU9ahhPphoinwEnSfeE2WN+5+73h5
kCDZ3xWbrmjJo85WZ8sKM/FP3SR3vtdKKhbcS9yTZiKKas+bKnkj0USmqYy7
+sm0l+rbYo9bZFng1eRtgx+IbraVOjalAJ8M+NZkvmEgpZNP+Xp7q/GqeLHe
qVpPEjx7/Jp+1eByj+aAJfGd5CIbqUj2fI7du0/XvN3+guxKrypIbXiFc82/
iw8qWoi/8NM4qm48MX48EIYeEODlGfsoAz7QROmuCK4Ro3pCrpzoxVEntGdC
M8tx1kDrEeWAEZ9e4i6LO1eHnzyYXvxIYsJZ1E0n54AWvOVgr/C+jRnvMFQ1
GZte4LyROf6L/Qexz6rpgxvyO3FOYea+snXDuFau5+el67FOtpt6vHIUXxDk
XNY2GXDzoYaI+K1jWLojsDn14QcsuXXurXrLBHZ2PZ1tv7Efp1mvDVJe4cFf
ILJ9lWjC3xckH92poqBmjelB1E4z7igalstu82Gzc8S6qOxB/HlamZesQQBh
DX4OTtnDeFZ3rlLcYAGiywsG7qaM4iNPXUde3RNCVHDF+Q+XxnBFcVvoYIsl
2DwtSX9cNIGPGp6sfKMRwWe2k2Y46nmcNCx8qLFeOkBxMvBu+NnJlUY+5yTY
ybiJUikLTivIT81zLOMJOa1hbtFVX/WIkNMaMvPH5nlMEnHaQp6Vsi1cREOI
5Yr3lwQIjk/1T6wR01BnMyWgQ4jg8FytZBaiYalTX4o9jSA21HfduDMN/t65
XklWCHyz29WlPjS4BPVGbXBAUOc6u2osmIau9Jxn41IEJp/G9JJsGvY66O+H
ByHQByTOtsulwTRV5ZCyFkHb2mn1+8/S8KM0I7omBEHNjp8swopp2LxgEX9W
OAJFpdu+j7doWL7xWOD4JgTui+K2rn9Og+3Z+ddL4xBMXuNk+WcHDYoisUAb
j8Diu9pCaRcN/HLdekkCgp4DDh2j72kYqFH2HUhEcL22OqJ4nIZ2ndYnPAlB
iSbWhAQMbOip+kVxCMGZ15Mz94kYeNSvqKtORpAkjGkMRQywfL8YbwWCBEe0
XWXPwEIxfSNSiSDa645I6sJApeSlICsNwTdfRBdlTGVgjltlWN0xBNx/QdGM
o+fHMhD8C/jKOYk=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAASkkOQ/shCcCQzyif+v/vPxVpf/AI
HgnArOqjv0LE7j/giPCdFhoJwHI9XG6WiO0/d8jS+DESCcDBrFmqjhHrP6RH
l65oAgnAlF7/jQUm5j/+RSAa1uIIwPrMF8orxtg/skIy8bCjCMDcaQsiJw/K
v31io56+nwjABuLnILmgzr9IghRMzJsIwCL8xDNMltG/38H2pueTCMAMkSp5
TxnWvwxBu1wehAjAJPYs8cD53r9mP0TIi2QIwGmYjt/nCei/MV+1dZlgCMCx
lTTbBhPpv/x+JiOnXAjAldIiGSUa6r+Tvgh+wlQIwKUh8Ew+Iuy/wD3NM/lE
CMD/gHOhgQzwvxs8Vp9mJQjAIrAh9CHN879jcCpRHyEIwEgST6R2SfS/q6T+
AtgcCMBsFUoUWcT0vzsNp2ZJFAjAOISwz7e19b9b3vctLAMIwDh4h9F2hve/
oxLM3+T+B8CoStjm0vb3v+tGoJGd+gfAO4eBsaBl+L97r0j1DvIHwHOOjGyF
Pvm/m4CZvPHgB8AR/33PJd36v+O0bW6q3AfARbXJIsFA+78r6UEgY9gHwB7n
kxm5ovu/u1Hqg9TPB8ACZxWLtmH8v9siO0u3vgfAelSxEbPL/b8jVw/9b7oH
wBTwBkr+If6/a4vjrii2B8CV3zFRmHb+v/vzixKarQfACIAAELQa/78bxdzZ
fJwHwKfuMc83JwDAY/mwizWYB8Ch7tjmiksAwKsthT3ukwfAyiL6KAJvAMA7
li2hX4sHwGlne6VcswDAg8oBUxiHB8DERczAP9QAwMv+1QTRggfAVodlyEb0
AMAHqbhpdHwHwBgtRFT7IQHAl2FAQQ==
        "]], 
       LineBox[CompressedData["
1:eJwUmHc8le8bx53jmAmVRGmpJHw1jOz7pLLKKCkZRUladkZlJCFJGQlJZYVk
VEaS6wllhOy95yHjDBznWL/n95fX++V+7vtzX9fH9Twfu684nb1G5ODgKOHi
4Pj/T8m/j7hGt3BjYv+dOLe0m4C5Th+eHNnEjW1/y1FYKUjAInvPH2MLcWPE
x9XnuJY4sM9192OFBLix/Ue+OIqMc2C0T7901EjcmKJOoVdOKQfm7Hgx+fkc
F3b6ZuiJTbc5MKdZfyu1Vi7MPr3Q7EfAGtym/a1/HsOFJUV8FYbKZQgbnNuX
GsmFKV1/d/FKwjJkNYr7FIdzYRzYloK9LsvwL++q7GgQF1YyYrZVZNsy3HRl
Bqt5cmEt8nFnWM5LcIOx49joBS5sQ1x1ccx+NoQMH49lm3JhKcltjz+ssSC9
2WFWyIQLk6hQ4+HtYAHly+c3anpcmBpZ4WPZExY4uOuwn6twYb+Pl/Ndoy2C
/fydL2riXNhSnOUp+2YmENnzgksiXNiQ2rnMomwmvF31ufldmAszaF+Qjgpl
QgdP+G4NXi7sJs93t4njTDDYmv1ck0nCrhf2WZr9WICxHcr/VugkrDgz3GbP
mwV4tKdUp3SGhDGnFk2f+CxAiVz9itYYCRude3trD3kB5NHMLXIrCZPYWpZc
VDsPNcc9KjkaSZhvkSTDMW8eruutSv6sJWFqXOvHKmPm4d0Zwa5jFSSsLeZy
2LWr86BxPkaJiOHrB7qYHw3modNiR0TZdxJWP77TM/bIPGy0k9c7/oWEXWKF
aduT5iHboSCZM4eExbYqp+rNzMGpO1pr5ZkkLI2zXa+5Yw4CPYwKTiTh+rWy
U4Zy5oAZ4rhXJwI/72Ztwsy1OYh+tuDH/YyEBT698lDMbA4ORfp2/w7Bz2sw
NPp3Yg5uvg6P1PUnYWGpAiGhUnPA/U50hucBCat0iFM9LzYHySmJ+lWeJGzE
jGxdzT8HPZ+yOfSdSNiubag4mcYAr8/KVny3SJj+RXIa3xgDNheWFlbbk7CN
v9ffFOlmwOfvOptCr5AwT5m6I+UNDDDC6h0NLuH1pJyV2FzJgMmK8zX8FiQs
vP78Yb5SBgRX9+37Y0bCvM5m3krMZ8DeevuHT8/g+2s4f23+xACsaabnlCEJ
s/1oNvIhjQFW7R4qAvokrM6ztlz8HQNY3atRtSdw/aM666TjGRAzEDQbRsbv
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
        "]], 
       LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAy6JK+1t8B0CMFiKq/ZAQQBbWQ4e5
iAdAJzepbOljEEDKB85ZrowHQNAp7PGRVBBAfjlYLKOQB0Cn1uxd3EQQQOec
bNGMmAdAseuvAlckEEC4Y5UbYKgHQPZl+6zKvQ9AbJUf7lSsB0BcXWOHPZkP
QCDHqcBJsAdA9uYRqPVzD0CIKr5lM7gHQJcFAEU3Jw9AWfHmrwbIB0Anz90F
DYUOQA4jcYL7ywdAgp6r37ZaDkDCVPtU8M8HQPjlRSmqLw5AKrgP+tnXB0BO
ccTsb9cNQPp+OESt5wdAEtuCsI4eDUCcDIrYUwcIQOzBD7HviwtAjx00dr4L
CEBfwHNZXlALQIIu3hMpEAhAeB1t//0TC0BnUDJP/hgIQGDJze3XmApAMpTa
xagqCEBULm9QL5kJQMgbK7P9TQhAQkcGxmR2B0DzKsyNp5QIQMjqt22EtQJA
5jt2KxKZCECW0lme1mQCQNhMIMl8nQhAuuAVWrETAkC+bnQEUqYIQH+DyG8O
cAFAiLIce/y3CEAcoa7nyiMAQB46bWhR2whA7NBR0Ar1+j8RSxcGvN8IQKx4
6TkpSPo/BFzBoybkCEB8zt+Sz5r5P+l9Fd/77AhAyeW3ddM++D+0wb1Vpv4I
QPC9snuVgvU/p9Jn8xADCUCogMaW0NL0P5rjEZF7BwlA0rVvKNMi9D9/BWbM
UBAJQJMo1OBOwvI/chYQarsUCUB//BQp2BHyP2QnugcmGQlAtTKzKUlh8T9X
OGSlkB0JQCqVdvmpsPA/SkkOQ/shCUA4mGuwAgDwPxtLA34=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0]], 
       LineBox[{{-3.1415925253615216`, -2.5645654330479758`*^-6}, \
{-3.1396654881365387`, -0.03854239053968428}, {-3.137738450911556, \
-0.07707670636416866}, {-3.1338843764615905`, -0.15410677650888954`}, \
{-3.1261762275616594`, -0.30785867944818573`}, {-3.110759929761797, \
-0.6129045988498523}, {-3.0799273341620728`, -1.2035874286874124`}, \
{-3.07800029693709, -1.2392798815415207`}, {-3.076073259712107, \
-1.27479844146359}, {-3.0722191852621417`, -1.345294826818887}, \
{-3.0645110363622106`, -1.483993754885747}, {-3.0490947385623484`, \
-1.7512091986034308`}, {-3.0471677013373655`, -1.783572605262341}, \
{-3.0452406641123826`, -1.8156915179193498`}, {-3.0413865896624173`, \
-1.8791800978370259`}, {-3.033678440762486, -2.003053312939357}, \
{-3.0245717896143343`, -2.141592653589793}}], 
       LineBox[CompressedData["
1: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
S/rJS5gL7AydwhXe6QcvCjPwldTZqaog8nl7O57WCJB+2oaVTF6ewiCet2w6
NwNbH7yuW3NxCmsSf+znJc+/tsKyv5qOU3ivvWopndy/bpEpdpj5FILz3X5t
8jygavIJ5BtNoWE8xzbtHx0HXDZL/T00hTfq3m7uGaHj2BfLg9tVpnC36bHQ
2h46/qO7GZspTOHO6CN5N0jP6dL3bLw3T+GwW7zqYisd530/+n1ZNYXrFDxu
+9WSnitJf3JgTmKguc8GY9LrFdZqP+6NTeKGhbuloZl0FLh3rPNd3yQ+e5GV
E59Mx1XU2xxOyyT6Fnz22v2UjhujhzTiPkyiCE3p0g7S082VXCaf30xi9NMt
sbOudJSdlDwz9HoS3dt5jJ+Qnu4wOuq/N3oSJz7KFoAF6eFCblnztUncXf79
i8dOOmoo1NXPu01itXK+fN1WOmpZ9XVtPDeJ8wmRXnPr6Kj/XnzR7eQkXpWK
KPu+nI4WZ28Av9ok6lbssXbqnMK/8fcD79L/4e3Hws9eBk4hdaYksZX6DycP
vDY08yLnajZRvvnnP7z3Omj2z7kpZHIf5yrP+4c3dNNPXzeZQiFXqaA5r3/o
JUGkLaydwkMa725fmJ3A+Bmdk/GZk3hg2PXDfwMTGM53r2cwbhJVnyoO2rZO
kHs4oSMSOonbxjOMzPMm8FJztjmXyyQKvEgROeA+gRtrndwub5/E30TsS4HB
cfSsXe87cOgfXioNLnn3awwXAtrPivOPo/N5nfGML2MotqIhTX5wDM+ILZFO
yR/DtQ2KyVA5hscuBQTFRI6hS8DfGa8bY7hX6rrhLZMxXEI5IXh0bBS5/Nx/
m1ePop/6lcmsphGMPnCaMf1hBGfs217KfRxCZ8rWG6KpI3iuX7Y6LX4IVb/8
W7IzegQpnZRzDgFD2GRyR/T8tREsN/tz/77eEAo45uxq3zuCknNB000tgxh0
j8ejrHAYNfYSlGOUQTx2tGm2PW0Yf9Ca7gsMDuBG0fiA2WfD2BFyfOXq+gH8
9HzXI2WfYbT6L/Kl8IsBnHtr8zZJbRgDbJb312gOoFvr+7GQ4iGstaX8+/O4
HzXibnolZwzh+m8MmbKb/ShgZ0Bg7BDy9L2Jm7/QjxlDnfzzvkPolv4s01un
H/vYvAou6kN4adQs+hmrD/PKf76/Kz+EChvOeGoM92HQnQT1FMkhNKQnHznY
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
VNpxZWBJJddwN+q2Z/DIMf9g/H/eN36Hd6Mx//UbXNf+4DLRNOWon11o4yrp
nO/bhu5Gy97+PtSJCb4mFfKn2/CsTvTSy0Kd2HMnSPqVehtm8tlKhv/pQKeE
kT8P2b9x5XzwOxu3DnRp+Ghy7uZvLC/+Tzo88i9e32WtJnnrFxJW21L9vv7B
2Onn/IH3WtCUS8n75Gwrlr8eCjU524KOvEqjx/Jacchyj8B63Rby/+XPB2Xd
W1GtoF7g4+JPfPOQW9V1oAV/XeMSYl77ieKrhY1Gfv5E0bmzwuedmzHKYv92
y7dNGMbatdrsUCMG+d7af52oxfxM/6cbNjai6rknKutu1GLBh2iFdnYDXjEc
PnSN9Q0tr31TFPNswMVQRr83uwYjZ5V23nOoR4nYrWkey7+iAGtexUPzO2av
Op8ocbQSrU8/URVk1ZHn4DrRx+0VmPlRcU/mhzq88DRgXOFCBRresNvbp1iH
HTLbH3bd/4whRJWa1bpaNP8YIxSeh7i48EhDa+4ravmHvNFxL8aUilPRZ4u+
ovie3YZnsAgNQzb/C/MhWd2Be1SkCJ8IFib+matGXuG6965lBbhNqmup5/wX
lNLiFny4Jx+/d6fZxBZ/waqAyifvYvPwcvLlD+j7Becy4jiOlDwskV92ToBV
hSM36wpDWnPRdL9i7WtWJZ6fSuFnarxDJjEt8/1jJVpZTcaX7HyLseV4g369
EttWXg1F2TdI0z++A9gVyHvHQSNgSxZ6n7ge0cb+jHIO7MGmM2koJak7vFDy
GdU+yIDX9VT83Cl4aKvfZ7QKHpgyfP4a+Z1fMS4T5ei3QtI2cCwZNQcj3oiz
EJ1UirY9/p6I99y22P13HfF80dP1RiKJ2DxdKJzDKkPKyfVqYgUJeJa729OQ
/QnTZ5tCOaznmBN6ZWv0jU+Yw5Rs1MmOQ5Yoz28quxTnbrhxm5+LxfBNO9T9
iBJs/LjshRcrGtvSy0dr/EpQeKlwom3zU5RRtnixmvMRe8asWgvzorBA8wbl
HacYfcR1CNvISOyy/lbdu1CIOV6FTyV9H6IczcZHKaAQlatkxQ5/DMUrFye3
31gswMCDSspxAg+Qx3fNQzFKAWpxP6wqoYWgGSVL0yHwA5ZLetznPn8H4+5q
Tr6hfMDArK1PLhG3USna+bg+Vz5uvOHH729xC33Wz3NH3crDjUrWa5+uCcSK
lLCCHq48tBdV9Tr68yaeyMtbe33Je6QMWNzm8fTFRHX9uuqgXOyxHJc94+qN
I5/b/VYtzUWtWq4ypdtX8WYjV0/20hy0L9/878XCZVSUiBGfFXiHWoyXW/Ci
B9o9UnSNEn2L5f/tqr/a6YqRPJ8rd0m8wfKCLYotq1yw6qalZMP6bNQius8d
9j6PM8xhj0ubs7A84caEF89Z3H7J/+uK7ZlYTnctWlr+H4afTvPSVU3HwJt/
BXxP2WF504G63v1pWM4qGt390RoZBo2bAiAVy32WPPZ1skLZcicfKb3XGBit
EHvJ0hKt9s3XFxulYODeVtctD8wx9O3DrSfNkjHQSGmz86Iplm2V8WNaJiFl
31ybztkjOBlf0PzY+hUGFprtnjikj5vFjmzf6ZCIFKPDzg6PdDBLHBdjfiRg
ueY1vUd6Wii8bCj7Z1s8UgxnKz+VqeNVhvBpob44pEwOGZx+swfbe/cvN/wX
g5S8tdQ4o10IjY75t0lvKLJcG7aLKWBKWahD2bKnSPlvSdSzsi3I9yZfaF74
CVJCHu/7PbMB3Z93lqhIPUYK/aLnoKM4pq8SbO4wCUfKBi39qPUr8crkGUVz
5wdIOfx+zPsRNx78kRPy9UYIUoLns3Vd5suWZy7pPRgZhBTeZ2t+pY2VJQlm
XHM6dpPk3k0lyh1l+74aK5j6X0WKR9q/in3VZc+4etHzhAtSeowOqHeklgUO
m5lH2p9ECmWDmsazS2VF5YGX+N8BUCgCluF1mzQnUgy4BeL/A0r54p/57ghN
akzg0XWvLgMl8N5X7ztFmibdHTHKXr4ktxhv9WzW7IiUoiclBwLFo6sjP75P
U7Sg9tmOh8FA0e15e+QiQ9Pgj49G0bV7QMm2ulZxhgL+hCztkH0YUBQXBbQe
rID2RxerBrZEAIW5TupHvSh4vdJek702EihnuVy0AiRhZZ7ExctCUUAxfX3x
CbcMZFb9K927NBooS+/c9m/YBnq/qlcSs8+AssC1/U6xEvQMvnD8PBYLge3v
ab9cVeDGvNeHkN7nECg/Fei+TQ3E+Y15jX+9AMr7lKiJpxqQK7XZWqTuJVA0
w8ebqNogu4ZzYrQ7ESjbynOdHfSA8fI8xaT9FVC+2slVGxtCuVxLRk5LElCM
TOrZmUchPBeOr2pIhkBpjUIu7WNgrZ5FXP2WApRfbRUDo8dBrlI8ta3yNWgt
+/Nzw58TMHMkyPRAWSqUD1XQo/hPQ1XL+NyLojSgPHgpuSPEFh7bnkqi5KUD
JeXrTO9rezgzUHXkvzcZkPhccM+zd46g6K48/SUtExInXzfG9zoBa/Z5glxS
Fmy8Ur3XUuMcfA1cbhAanw2Jzrufbqi6AI6RXXFmj9+CfcRQ12Erd+AighXo
ie/Afp6Zf/vEZWh8v7rL0CoHerZXZ15Y7wkeUqVuo+dywV7DbA83tzdoHVu5
r/RfLlC8J7NNtvqCcIjjYpj3e6CMj14wOnsDcv7xRijdzQOtX4lyilsDIXCL
jdWiUD4EEnqEh/ctMDv1bmNjdD4Iq023LfsbBJMVlrmXUz9ARKLYy8Dfd6B8
Nt33kFIB2O9ZyBS5fBciFAntVQUFkPjEaNJg/X1Qjk5qzv9SCDn+/mJDb0lv
6qbj7hwtAi3wUB6OCofGRYP/TrQWQc7gu2sO+hHgceEfY7avGJS/eJwLs4sE
rYRDpTWXPpJ/dTc/FrzxBIR/Pg2OZX6E8wbfVLleRUHOwYOrD3CXQmJa1n9F
As8g8PKjTv6wUtj4OGsx3zwGzFKprztWfYJGn8Ad0cmxMLny/l7/zWWg9jpO
5OLZeIiZGsmy31QOEqs+SjjtJz0JExM2dC4H+23tlrtWJMF5WU2vXRnlIPal
Q62yKwnUrB8fXLLrM4R1e0gfe54CbVX7fiRrVUDEpx0heafTQcvOYVdYcAWc
V4noNTiVAenzD5561VRAYoMwu8Y2E3yUumz1zCpBarXwYrhPNkjEBE8M2FVB
rXRgacz1HAjc/da8IbkKGimvfSJEcmHo+++CwsEqEBY/2++blQtFXAoB99y/
wMErK/atHXoPVi5NK+UDqsFp2Vz1/uAPEKO5YZdrQg10rBWuOaNbAplX12h8
76wB5Y3WcbfZJVCaLWyosP4blFLOG87ll0Kv5FKH4eff4JeNYUGRUhnIzw5G
OMfWgod/p61bQjmUvsudtI36DnEfe1dGdVWCR4SM1Ta9RtAxJea0l9fBvIJ0
1y+nRjCwmFNsCqiDoK/rnEKCG4F+oVqXMVcHUQtiHv2VjVDD2Nrze+w7FF9a
fi/5UBMILF/692p7PSwxHCuU1mqGPWuSTn/8rwmecBWskTjQAqY2juJbbVth
73zsdXfbFtghYv3q9atWaJ+82Vkd0AKX9Rq+UwZaYWOPXvLVqhbIvqqzba/b
L3hb1qr082grRBoZUeT8fkPtjWm9cPtfYC4aFvPswR9w8/yT3h/0C6r3PU1u
rf0DIi6f+DVe/4La1pPr3vK1g9XpO02jw78g6qp3vPT9duhXW21r6PkbJqZO
NyYG/gXKjKoXd0gbdDhTy+RPdkLKuMRv6/Q2MA//99LzUSfo9xP782rbYD4j
p0LmayeEt1QtOqz8A/LE1ZUZql0glWcRijF/YPkl23oh3m4oz1SbEC/5A5yE
37qHDnTDf0lSx9w6/4CqY0FgjWs3ZD7uE18v0w4NIgErvzR2wz4Pr6TrWe0Q
MZr/Z4t+D7Sfs1rW/KMddif6zEzY9oC/3cHz2yfb4V37/lPWXj1QZcKt1Kb6
F86fbNonkdgD5juiiveU/QXrdKdfIowemNniI/Ww5y80DFqYdfL0QqyUTUDf
kg7gX7a64bBkL/Twb9F7ot8B8lsuxNOhF9xG8honGzsgWJ/pnBbSCwuq8h/S
6B0wt2rOfeWzXngYkBh7RqwTPiwXblmT1gvZYg8dv5M5RX1ePraiuhdGNM8y
07o64e2xHa+8F3vh+v2OtjOULmC677kyIECFFS3mn1bLdEHyVM/h2bVUkLsA
Ibedu+BL2vhrigoVzj2RkLAb64LA4QCLcnsqzHSGE6uFyNzGTgkedaFCiNyy
3u87u+Hrg7uagVepkPppKkPdsxvSf5eKdt6jwl7e8+FTUd0Q555vwRtJhS/m
XVfSC7rBYX+ucWccFfoGaw+Is7ph4IfKyntZVFCP3RgxINgDmcL+dXZ5VAgq
s15SsaEHFB03bOr/SAWRFc0DPlo9YHelZZiooYKVkuApi2Nk7kFLEh43UCHx
uEHdTsceCMerrm2tVFBOKHs3cLsHjipVG9zqpYJP5fymiqgeCKqY7ekfoJLv
FdWoF697gFb1PZtrjAq8Qh48vgU9kLjsB++vSSqYqmT5WHztAeMKhdNO01SI
thoY2dnWAxuzE4TezlOh6+YmW/5h8n5DKvH5HCq41TzTruDrhdN7PugscNOg
YLw578W6XhAZ/XdZl5cGC6JCsr6KvUA4PXp1lJ8Gh9UMYyw0eiE/qdJ9nRAN
wm2D+ZRNemGggPvWO2Ea/ApCP367XhBSpAbyr6LBhnTWxIB7L9SENW3atZoG
Z3/scagI7IVnqwkpmTU0eEP3+PnicS+UPOXf3SNBA+aabD3fpF6YCp6RdZWk
wUGNwUKLvF7Qt6j7WruOBsGOMvLKVb2Qs3h9gCVFg+93beP5W3thcCDp9OJ6
Goi9iREa7O+FGIYlV/sGGtg0/wysmOkF2VX9pWHSNEiZFWK8WE6FSL40r7Ub
aTAmZeTsK0GF9kwUCyJZ9dCd3xbbqXDl0sDDGpL9zpUbKqtT4aKPYusEyVVh
7BL+I1TgbK2gzZDM/36v0qA1FfQYJQVUks1/X06suESF/sVfJvkkxxHZogk3
qfBQWCPHlWTqpqFg33AqWMsYUIVJltffPGvxkgqsKL1/L8n64o+brxJ6R869
sf+ALMkr7W/t/FpGhdpDH68lkP0EXco5ElhPBR7eS0f5SGb6dJ/b30UFBXcF
dxey/7N3hILp41RYGLwdVknm0/ZYIzGLnHNp9c6TYiR/ynzetp783mPRI+Wp
ZL7KhbXMX4o0OPPofvXoWhokVc4LRxykgecBe0NlkkM6ThousaHBKWWp2DJy
XnNDIc4lLjQYUDRt5CfZZfrDLa8bNNjOsLayE6eBmZDYx4E4GsiIRihuJOdd
Ianz62UmDRwzBrsjxGiwZ9sVutVHGtxulX4vRHK6yish0Voa9Cd7WDwnfZHU
apSv+0MD3ov119RIDjNePBw8THql8unroCjpo5XSfxrzNIg128LMJNnD2TZg
hrcPdJfKpN0mmXY57Pk7iT4IOt1935PkE/4lhefl+kBlj5OOH8k1D0Z+blLr
gyhvF5+XJKs/WzvZrt8HvVf31XWRnJ1sIBB1sg+ex5z9e+D//uZ4yx091wdb
oEaviOTHpam6PN598K9vV4olWT/3t1Z7DOmD7IcWD1eT/V5r5b7pE90HK25G
Rs2TPNSrErsrtQ8WNFoNl5J5WU84fhj50Ae2C//tVyV9r2c9bkr+0gdphz6O
PiTz1lr+edymtQ88Zs70i5C+v181uUK8vw9qOktSP5Pz27JRWraB2QeuLtNZ
//chWtHk0D3ufnCiVF7KJH1asf/mGW2xfkiL0bcZkCH91cu+ztrcD2rDI0PH
t9Jg4tjf6DyVfnjP2O3H3EYD+zN8eZd0+oFnVcL1b/I0aL64v2Hr8X6IvHNT
p2UHDXS9z492OfbDWZ9GZfFdNCi8/Wx5zJV+SHom/SxClfQ1fhr4IvvhQcYb
blXSG6GMLTaVr/rh3CrXGDstGgR+OO7jl9sPCc/6PtXo0sC5PjdnorEfjH+c
irIyIf1s7/me1tMPrg+KEm8dp4HR4Mph+8l+WDA9Nj1mRQMlitumnysHgM+h
pD/ciQaJAi80wqQHwBy+p329SINVa7+f0ts5APudrRcOXyb93CUfWWgyAEk5
a8+vD6DB5/8GlsQ/HIC9fm7hOglkvhvuC2YkDEDNZs/gu2k0KG9TkCh4NwDF
8F10Wy7JRy/vaGwagMtZP1v9vpDf5xVT66QOQIza5U7VRhpgRcGhEcYA7Jzk
3mz8lwZl+4iT3OKD4DBl//g5nQaa9ARHkW2DwOM+t6t1gdy3bG3XDWqDUB1I
X/Tg74PSTXeD1E4PglvW28imrX3wkV/0zaWEQXhhUkbo2vWBenV+oe+7QTDx
XFaV4NYHxYEnK0LKB+GBiIXtGf8+KJqO/51IHYQ3jc2TK1/2QUH3tiWtskNw
fNMGcy3Sk/d5Gic13g3BlSs5Y7XB/bDbrcfBqHwIwqSD02/H9UOu3O1LJ5uG
gCtqXjsxpx9yXtTcuswYAgldSs+Srn54e/d49ut9w5D54X2vtcYAZFpf4BIq
H4a/xi8aUwUHQV5cQGBd0zDsvz14Smf7IGQ0vhWXow5DSOCO3D16g5Cux1Q4
xD0CP84lloj7D0LqzoAT1wxG4BXV/lkKYxCSlj7N6mocAd7hze9fjQ2B8WsF
+289IyAnt6q5mm8YZg5XiOVPjsCoRqzVpu3DYPTg3837wqMw9HYowePsMNCF
jcxUzUahUeXtvDFtGHQ2LDLvN4zCWOPvw0/6RqBP7YLmnvoxoOaqnNg9Pwbh
7Yt06a4xOLdA06+RHAc1v+g0vokxuFesP299cBzCsFK4R3AchiwzV18NGAfV
wxtoD46Ow5vkGzH7l03AneM/7/Z8HwfuVLnwC4L/QNZNoym0bgJCxynjXbcm
4fD+F4dl/06A2QnmhWsRk3CWm1NSPjIBr/xsiqcSJiEtrjR1esU/4H9xkhVR
MglyXw/42Rn8g8fLO+rPMCZh+0b1bSpf/sHnJyar022mwGg0Nv5Hyz/IqZ6c
2nFhCi4WzIuc7/sHm3d/e//w6hRYptr413NNwr1Lo51tD6fg6UGpC0s3TULV
58q4iNIpEL/wXNPVbhI0Nk+3yonSIdXkiK/6uUlYzXPrm4QUHfaqsvOWu0/C
ochj5zq20uHE4untSf6TELpUJL1TjQ7RTyXFfr+YhP1OMc4VNnSQvVFrkvJ6
Eiq4Z/IMnelQYH/9/uU3k6Bim6WU7EqHXwrtC/yfJoG9RVr7+006rKmIHdbq
mATlDQk808/pkJ5muEWobxICZToq+ZPpoPZw/szf0UkIgOwTzAw6WFmdarnK
Jn8v+kL+QCEdhjRWrNRZOgWXJA3DYz/RwWdzsaEw/xTUC7wQqK2kQ8yEBGZK
ToH8scmmVw10kGupmfeWmYLpIcLesJUORcU+qnryU9B+5mtcZTsd2oLbMrr3
T8G6J9NNyv10kFgXEyV2agoqL+tnMGfp8Pb3repQhylQzn7yKpKgg16Uy9yS
i1NgIPYqjkNhwBVBsJm6PgX2y74dPriCAStq5cLP356CSCGVfmFBBiSGiJZ3
h07Bi4P9p/OFGfBjsX9zffwUeOY+6L+whgFOpQ2Weq+nYPVDSfGbkgxg+RTf
LX0zBQfaBC0d1jPg8Z7kYpWCKZBL+6W5ZiMD5Ohho5llU/CoLuXqSxkGlL29
tl7m6xTsd7F4xdrCAEsXe9PYhinI6Ld2376NAWPbjG4Jt03BQ77iSMXtDAjq
U8m720P2n9RZya3AgLWv1vcvDE3BnMnz8veKDMixXb7m2tQUNJQIGe9TYsBh
ySmD8fkpWL/rgdKTnQzo/NV+3WkJHZxvBOz5qswArydV2X/56FCjckGlZRcD
+MzedpmvooP6+bzFj7sZ8EogRrh2HR2+piZf81NhgNq3W4e0t9DBwE3Ld60q
A+rvuHgVKdLBdbnaeCTJzocsU3fuIedUU106TDKxoNmWqkEHh5r4Xxv2MCCy
RI5vw2E6dCxU7FAhebuP6MGnJnRQ7gwo3kZyuSrhKnCSDpxTB65yyOtPTPW/
vG1Hh2M+jvYfSB5/09DEOkd6csTI34zk4IvFS6940KHshuivBrI+yW3Je4Z9
6FBnfPeKKsm5tLBz9rfoELJjqWMA2Y9B4rXY3/fpYNJoWpBL9ttlY19nEkmH
4qaQ4O9kHlfXGnG+xNHh6eRUXyOZV1Lkeof8LLL+yI/f43YwYL/p8icK+eT9
3X2eOJJ5N/JPVSWV0uFzxdBFCXIenOAqucc/6KCz9d6guRwDrLxdJl3/0SFh
3de2zeS8J1QsZfpJL79HHv/pR/pwZ1LTwob0cOIpw/jHBga8vyBaZCTCgCGx
xqen1jFA0KY4YBvZh1xoQYa2GANSJJJzEw4wINrt6icfUQaot4bRVusy4H7D
P8lc0s/zJvb63JYMsClmJsuT/lZoLV/Ze40BHyzOBP/HQz5ncmT1V38GaCpx
faJyk3m9qpd6E8IA2ayKGJel5D5wRcv7RpPXh1F3J5B1JeT67rJLYIBrTNeo
4SIdah1s1fRSGbAta/Hg0gU6yFRsOSxSwIBfy9seJ7HJXK/wHp39xIB065i7
D1h0uC4zdrzzC5mbt/X87XnyvGpuOF35g7xv3euOR3N0aA7Kc8hoJT1NObv1
HZnLwu5n5x91MkDcqesLdYYO8rTr7lf7yT3sD36rQPKJJ2euWY8zII1r8seD
aTrc0jl0U3uaAcs1PwpzkZzN2Bq8jcMAqfQLDo+Y5PmQvCJUcBkT2jtOpO8l
mdti/DFDgAlp2lF1swzSO+6mmD9iTFjv0fr2J8k2+fkvUYoJD36fUKkj+Z5T
TOrrLUx4G/1lXzfJ+WJ+b0IVmXAoYluMMHm/niq7/MuqTCgurdxhT7LAVZ2S
kweZUFPC11BPstrWbRUaukw4kB5gakvW59TK922zMRN8lF8FCJD9RNyZaFhh
wYRNM82KnSSX7mn+9c+aCfL79Dc1knkM9X/obP2PCZTKoc0DZF5i0bF9JS5M
qNXQm5Mm89U6fHP0lScTjPO9z/iT+V+asaffvUHWG7Rq1RIOuSepuvOut5mg
EbGyIYucV9UJOYpFKBMaqbn6fuR8J3kElqs/YcKV0BtKXkvI3Ar/CW58zgTq
hNiuKNIPg3M/xXiSmbDgoj7fQfqT+DVOpvk9E6RiBV1H+Rnw3dt/e9FHJpwW
+nfyvRAD5rY5KidUMCFKNjEkhfTY7N52zYvNTMjvPbwoIMEAPzVBPbN2Jjxt
VT8bTPqdPjR5ZC+VCWY27UbbpRmwaFB0agmdvH4o6ylHlgHy88/th+aZsIv+
nLmD3K8TGQHn6rmmge0aXfGQ3M+3K/SvxolMw9FphQudagxoL5b3C1w7DeEu
V8TqNRjAc1Ho9tlN0+BURmn5d4gBZ2pbI3bvmoY1aWKLX48y4MH14mcS+6fB
JyZ+dcBxBhTIv0hY0JoG5ZfW0edPMUAo1Cm71mwautqcmT+dyfP6COOro8c0
VPsPNIreIvNrFq6m+0zD+/Cv3UvvM2DzaaWqoFvTYPBwya7djxlw7/yF8qTI
aWAJ3FLQT2KA+Z3uImr+NGT5aLdafCXPLwFOwZVP02B+8mzA7iYGFD6R/LCk
ehq8DojWHf1LziPJMlfm9zT8TvMcPDjJgIGyugzH+WnoP2Q7OUd6KnF4OI3O
NQOqq6ueoRwTjvzgSQ3im4E+iTO2FaSXOX+1k5LWzYDJqgr69aNMuD5XGEfV
mAEJzxnPN7eYILQ7JdQxaAZqEkVNM5hM0Cr+fJ/+YAbGLukcZi+dBk+t7rtB
T2ag8P6vxsBV09BmIhmclDIDj5aN3t+sMg1JLhF+1OoZqOdvuJPjNQ17X/u5
OvLPgv+dfmUpygzYSViaOkbNgs3yPWUflGdB9sklGYf4WVA2rio5qDMLE4LB
03Yps7Bq9tTGZkvyuqV5z23zZ8Ho2IPMzTdmIWFCeMiqZRa69nvsOlQ9Cx1V
3wNNxebgWSznm4vtHFhd1n1/MGoOUO6zhs7dedg4Zn3nQPwcUP2LDKxj52Ho
rKeVesoctO0b/WyTNQ/eNkkL+/Ln4J237b01DfMQrU85otIyBw8OhMQfXc2C
1vWltO1i81DuN/Hpx3MWxMf8LJCTmod8gl3AzmKB06rR+9u2zINAUaTLklIW
MHkllbeqzsOFbDfD6L8sEGN6+220mAcGEXyrTIIN5rUqq9dEzcO/K/fFLR6w
ofXPu5rx5/Nw3/N3zX/P2GA1rOBXlTwPUp5pB7RT2GDLu4V2OW8ejCwLJxw/
seH8YbHc783zULUixXPXOBtGLSOcktvn4ffJL1MJc2xwcxaQuE6dB+V82brW
pQR4BXMHbKPPg/97Nr5YS0BABdM4SIQFlkl39oQeImBJswfl1FoWrHWQH9tn
TEBw71jezk0seC1Lmci0JOABpV+yU5kFvllnC6jnCBAUdqjPU2NBWQwvJ9WD
gAjpzlsPtFjg3yn8SNmXgGjN1qF9ZixIr+a0Rt4nYK3JsXghKxbwbOZXd3lM
QLztD9N+OxZcSe3S540lyL+bvxREurNgXRdBiUgjIPvjh+DxcBaYp1+Kb/lM
wM7aXWpV0SwIXifc1viVgPd/3ozGJbCg0dPs+eMfBBTNvTY3eMuC02pW6xza
CDjAK8MjXcAC2slKCY9OAsrWJBRPf2KB+2dRaV0qAZV7ozcm/yDnIjPKd3CU
gMOHRVt8W8nnWXAc7P8RUGMZfteskwVeNlyvjRgEHHHmO7CtnwXGMfR17BkC
6r1CJjhjLLhV9FfsCouAY8FLklqYLPhvSzPtHYeAlif+llkEC06VT1LzKRxo
f3+t1EqADayhFXOreThgW0F33ynGBv01G3qu8HKgp8ltM48UGz5x/ONj+Djg
2Dvyq2MzG0rlFlPuCnCgf/LsgzwFNvh7GnlrCXHgPIWm8UCF9Ci0I7pyJQdG
VtpN2R9gQ33bTJiICAdcpf+m7NNhQ1fD0yF5UQ5MKp20EjrCBp80Z03hVRzw
1PzJ329OeuRbIFdB8sxRUyw5zYabde762mIc8LWtuxLpyAZa0FKtcJKJS/qy
Fy6Szztk/ymD5AC/yj9whQ21qjT3KJKXhMFD8ets2KtnKGhKcvDzEq3xW2yI
rXpp1k7ef3nWPmblfTZwAlRZe0mOeDyeoBvJBnu99KXmZH2SPsmGX+LYMNe4
a4saWX/ymVNMvWQ2RBSmOY+Q/SnqrXxZncWGooTPbRfI/gsUvhjq57NBW4iI
KiTzAdEbzK+lbBB3vlHUQuZXM6f80uALG04yx89VkPmadw8YfvvBhlwd1/pb
ZP4dX+KZhr/YMHTrzHoxbg44Z5u/rO1ig8xW87DrXBzw8S1j1v1jg/FCZHUN
m9wPe6+XxuReJVGyNuTNERB6WN7oB4UA+UqxnGvTBCSsin5ZL0KA+LeW1vAJ
AuRYR4xMJQmgpHfJDIwQkNvDNd0gQ8D1s5aSUoMEVL1xNWpSIeBTYUfO9m4C
hvX1pn+Sexbht3sNk/RZ1Y9p9IfcC7fwjH/PyH0oc8ycPpVEgF3xXd0w8lPf
0D6xPZOAvnr/t94vCDgt/n36bwkBh5J69NSfEBCYk5zYRXq/7fijoHh/Avie
nTpiN0BA7MA/d29yP5/cXDnTTdZ5IpqZdMKLgFSjG0d6Fwm4XfXpjtxFAur6
zGdom0iPcvU4BicIsKjjfeUkz4GtSiJNXscI6MotO9K/mwNj4j3a78nzYtJf
/tWADgduq1Ofn9ch+3TuOXLOmANRV14192kSsNQ4embQggMXpMW1fdXJnNYu
MR525kBVuazJ1C4CEhcLZy64cYAhL6fYtoOA7QOur0aucWDuuW5553YCDub9
mRm9y4EjNxrdjpA5Vsc+enUpggNXleXzCzYQYBqoZzwewwEh75XL9NcR4Hg0
99VEBgfsZEbZHWIE3NrmsKkrlwMrrrG41oiSz+MSefWjmANy08fCrq0k8/1b
vvHTZw6kqi1pJgQI6PzgkZj9jQOnr3fxZPERQDzauDG+iQMKBaetg3gJkLzY
+DL0DwfKBS8St3mI/1Vc5eFUvV30nuGec4fMU6FBQigVGdJwdqZCVEIREk1+
SWlUIiGJiMqsQSRFolDKPJRUSBFRKkKGklTiuvd7vz/Xc5/33ftde621z2WW
mQXN9v+M+vF1lcknBcyWWYuv/fdtipG5VFXLQ/l7dLxrlvPPKeblPFP9i5iA
iWu+cNXy3xRTuif01Fqko4IcZtYyTMj0y9BlOqJJpjnsx5X5XCGzLZymLIST
zE/3azOnSwmZAS+3PRemJhnJ5euv0DOETHTM9p98hHXkRMp/5wgZCZfarBLB
JGPzIze1d76Q2eodGHsDYe/nbsqti4WMc2X67TKEI9LFU2uNhIy2xcYBKXT+
dkCZUiEImZX1EWuuIFy32SclY62Q2ew9O287qt+7ZJbS5Q1C5ubxKDF31B97
WkNyyBYhI1Xba5qE+p/XG6B4yF3ItPoVLhHHkQ4rFiZ77BEyJrs+3ytH79+e
/GGG3QEhg7fGxeaykT4PRyWt9hMybp0aGR008o/tyhlLgoRMtd5U7hrEd+n8
4cQ54UJmdtqhQ7/QPDrxK9MlY4SMUU9dThea10TnukRRAurPkJAUkxEwRrE5
CR9vCZkTjmkcHeS7zXtdFBruCRm5U4v75yJ9HDWfllD6UMjkhDSd2Yr08+Df
3vjUZ+g+L+U1ydoCpvmNkvz5RiHzWrrlVNpipOe7L+L83wmZ+MUXr3/XFzA6
Htpxzn1Cpk12u5/LagGzbkWHrNUPIfOxHRMLXCNg9spHXl72V8jU22eY9dkI
mKz6gUvTaRFz5Mpm7sWtAkZV787FVnURM6BubbHxBOJHzFn6qY6IOdjcFfwo
WMC493EvFhqImPjgbn+vSMRHilfsZQsRs3ioVOU28vd0UjPGbpeISdG+RKXV
ChjDj20SJj4i5sLSrWpbmpCPH4VfWHIU3S+3xMCpA/nbuz9aMkzECBz/FBqN
ChjxlltRDTdFzKZIhyV7VKcYvbBYck+uiOni502ELJlithj6+2MPRczOjtvn
xhiUv0m2XkvrRIxYRL1ys+sUY+T22yx5QMRgi/wr9l+ZYvIPqQjvK7CgDj+T
naAtZMzWxReLlFigtq5x0f1VSAfz+EfWzWHBxiPllnJ2QkbQMjb4dT4L9ir+
aMg7LmQsjOrapxuz4PDNlnGll0KmQ+BTGOjCgi152L6UkyLGp6X7wAt3Fhx1
Gp7KvCRiWLlbFkzfyYLOrt/mX++IGPVtJun5+1jQhQncfrWLmAOVcrE9gSww
KLMdlJ7JAnZYibdVGgtWaikE3gpiwSIJ3jz5XhYcEibtOGaLwRzd/EbbARa4
1hyWVdyKgaTDFv+z31ngZ+ZcU7Qbg5HkzObxPyzQSWqg3wdhkKduerqDxuDa
o5/22fcx0F118uN1TQzOFHwevSSDw9ztqhHtCzEYHR7r2DobB+nQen1pXQyq
NxacEdPGYfT59KgQYwymvv1drGWCwwOHwuW7rDF4/zalf+F+HJbu+56ovQ+D
L5/8naOrcZgXE2e2wxeDmRfeOJ9+hYPsgxUjqUcwuO1z6/T6dziMjUesEQ/E
IDzajDgxgENhqMafkWgMVq+u7v8pTkDmrYY0zUsYzF1YqpClQEB8/REbjwQM
Nhi7b9SbQ8BRyZqMN9cwuGG6fd7TxQQYpLpvKsrDgNqwgHixngD1clr0vQAD
r311qgqbCZD/kntHoxgDn8ezLfTcCPirMYUlVWKwPvP47va9BPRbZdx9XYuB
3KTMNo+DBLTts3bi1WNgVVBpWexHwKMHSXn+zRhsWvpctTGUgKxWcCloRTyH
+htERRCQ+K+PHn6Pwbzv8iEKMQT4MQbb3LoxMCSW2F5IJmCPxwdeQh8GLg+k
Z568RsCWM6FFjYMYXL1b/VQvg4BlL5rFVo9hsCo7PRK/S8BY3x/VJeMYzNdY
dP5tHgG5pJKxigDdHz7L91gBAV4qzAYpFg4xAjHpwYcEzFvluQsjcdgdz1gv
ekJAl/PZkz9pxPPp9CnTMgKSj2Vf/MzHoaepS1yzkgDJ/F9llWjuM1X0BJ5P
CXjxSqElXwGHgH7PJ8V1BIQNLB9MU8Lh1ZK717rqCQDaHbuIdLFtV1Zmy0sC
JlVDFYJVceCG1jenNBBQBFkLD2rgUNS2R1u3iYADri9NPZBuQq1KSxJfE6B9
YsTJbhEOsdoDCY3NBPTGyx4w0cMhOnGqufUNAWkPjMJ0DXG4sH0sPPctAS5N
Lqlzl+PgfbKk3bEFzW846L40g0ODyGCgEeHX3Jt1uCkO6ZnLema0EnBe/fnH
UQsc1nZc+LMUYQvT4bEvVjjUWU7aqyCMuUvx39ji8GVcz6gLnS85qa9SbYfD
3m99H3wQPpbkZPjAEYc9yx+HN6H6ukUBNunOOAy1rQ4iER5qTvO85IaDeCaN
LiLg1o/a4yEeOHzWDz3fg97nMW3gwqFdOGwgZ1rGovcra4pnev6Hw+GlKjek
Ggl4Z65bsskHh51vav/ufEXARQ/HZtODiJ9rKveiXxBgc+pEv95RHMTs5+ue
f04AJ/WqUPUEDiN+N3+4PSOg6lGVrGwgDkYPDbbStQQEtPRqkcE4VOWbD5+p
IsBolLd67AwO2R6Yakc5AaPiizb3nMPBb8oxkC5F+lt7LKQmFoewBrHaviIC
VHemJBXE4eD7tPhF6gMCPp4uv5eRhEN+XIiONtLbpid0Z2gaDnZeV3xbswhY
pZO41DwfB12lrud+iQT8syqx0i/E4b+VYvt4lwko2P3JXa0YBzbF3D9xgQDN
tPlR7EocJLruKkycIUBWtvhrbRMOnfJn+875EjD4rz3eYgSHEoUGw1umBGjh
KVmRYzgQ1VWnhCtQvzyXx03jOLSevZy6yoCAHsWPH5wxxNPS8DWB8wnoXP5l
3n5pAr47dw/OmkbAy4CB+wlLCZh+ndcp9hoHXlh2TacRAUpq/PLo50gX0d6t
KisJCLLx7RGrwqHm6vd/2eaI16wdRdMe4FBaPgoVjgRUax6brY94ycUmG/qR
7/fl1zw7sRXpgFvyaWEAAX17yB0X7HHQkg4YPXiaAMph/G2xDQ6Zc0VyU+cI
4JmChiPgcNWUcJVKQTof7MNb1dG7rWt8HJHv9w+KlVTNwUHR/kxQSjoBK1bf
lnutiEP8DjpDLQflyqjRkS0SyAdn+IPL0NwK28Ynlk1g0BD1UhCIfJtn6NC2
9TcG0+KjxGuQDtboed67M4JyNFNC1xb58Lonq+otypmnuU2ml5DPrPpL8+6j
HCIfxjq0IR/s1NIVVXVhEPRM5rhHF+p/nef4qTYMyhrfRtzqRr7adsxwUQsG
gndxqUN9BNRcThbKodwz/uSYu2SIAHdPwXn9Rgz8+hUqjo4QcLxFceaFlxgU
jbS9fjL2f10l9qii3BwbT+pm/UO+UpeW/f0M7Rts62/zKQJuwJ9W4ikGB7jK
dCRGAv+J86aNNRgc5zuHnGWT4DUZaPG7CoNgsURRCJcER5/Nz16jnI6QaPUP
EiMhu/T9w74KDC5JyY6flCJhZe3x34YIp8rYHT4uR8JYJuFUXY5BhlzMyJEZ
JERoRBRFIHxXocH74EwSUhwtPkQjXDRj2jcfFRJ6QgMSmhAuV7LauVeNBPHI
XXc2oPvqZoZ/3q1JwldPiVYJVL9p9lPXHQtJCFQ2bRFH/bWrkO/dl5DwR/mA
q2012nuqJo6u+iQsfxk9qxG9Z0AtqNlpGQnxsZzqWPTeXxplto4rSXAxuPYj
vg7xqymot1tNgtkde9MuxBd7gfGa9eYk0As3bd77CgNxHb9qa0sS9na1lC1v
wkB+cRGz1oaEo2VS9MY3GMzWHXtitpGEcd7sh9loD81fqmu02oGEV7O7169D
e2ixwYGClU4k6BZPWOt9xMDEeCjHYDs6r3HXqLUXA+sVWpp6O0mwN3YSXkR7
yH7VnpuLvFD96ZteJyA97TTpuTLfl4ShRDeW/yTam2ZzFdWOkLAf/flwwnA4
auEer3KchMQ3umbBaM+EW3VGK54mQf5nV849WZTz6xT5CmdIyOty1i9EeyTZ
dstZmXMkmMux3pNob2TbvT01LZYEMa+i8WBdHArspQWcOBJsp7C0fGOUC44b
/NhJCKu8rtRCOd/g/PKA8DoJgh0SfgLkv3cuvOGJDBJ+/7RiOaBc/uS21utv
Fgn13yJ7/+7G4adHzfaRPHRexmab8kn0/bG3xO5LBQnJoWV2HbfQ3ts30fCx
hoRzNxdvDEb+V99vZN1RR4JKqwn3YDkOhocKTN82kYBPfWW02nBw9s9Z+vQT
0pswHUZR3lyLTJW/w2IDLVPh8l8I8lHbtJCLJBvY2+wSpS4R4D0v4McJDhvG
XQ/2/76B8rnUtc5akg0vre4kHqwmoOn7rBPDs9lw+Oq0nfNoVMcu7cNihg1U
3t67lxJJ2DU9M+NhABt8thkuD+9A53bIS10/zQZSY3hGzQgbdPPDAsLPsEFz
ecZleYoCkeVuR6coNow1RwyPL6Yg0X8+ZzKVDe/mJo+EnqWg/uOdvatK2ODx
zHzS0IAGnZv3dGsn2PBv1504uSgOTP9QkoyL2MB1lPLYl84BTK4ehTEFBaFn
zZOKOfA2tKf5MZ+C8grrao+vHDixY8ahPGUKAn/5WB405sKOVPWO4TkUfN6T
cmHOei7YvNUz1VajYPk9q4woTy7MMbOVyVxIgZ/Vz1NJkVx4phryIGUVBWvv
SX1d0MaFvK0xSu0mFEhN8CLCBriQfOlKiPwaCp4J2s6fE3DBh3i0KXY9Ba8C
vFmnZ/NAtnvoV5g7BV+8DC0H3XkgVJzYWrODgrJM2SDzAzzos6NrMC8Kaksj
v+ud4sHjKpXLJ30p+Pb5qHh1Cg/cbzguPRhMAVnyaZtHIw+s3num3gujQFbr
i7l8Bw/0pH3J4QgKevf/mLTs5QEVHPl29yUKTDYp/1Gf5MFIceKKmwmo/7wR
hxckH9p/3sz4kkLBu5Ds0q9ifMjZXnHYNYOC01HiMw7N4kN80qvO5CwKEnKq
HD6r8eHU6/dmbTkUDJZ3LyhZwIc93P4cuXwK1tFddpgeH+xW/5bdVEiBUuKn
4FwjPqw4jgfEFFPg5co9VbmSD2r5El9flVJQdSdD0siED+LflG34VRQ0urhy
JC34MD5Hq3DtU8R38MFVayz58GWL4cywegpYEYMXO6z58CLG7Ex1AwUvhl4M
19vwoaBu4zDrDQWKDhaMzHo+XGVtc1j1joJxox+n7iMcbuRd6t9BgfnX73mZ
CPseOK5W3EVB0Jhu57AtH5yzwqL+dFOgvuCabBi6z+zTpd96/RS4l6w8ug/V
05me5uo7RMGcDz7qN9byQWFDbm3uCAWrahTs55rzgRX+ZOHQGAWckSbDIeDD
QHldnOY/NM9KGVnhcj68/dsytWuKgkeeu/UdDfhQtqh7ZwZGQ86f86Oji/iQ
tXvk1Wc2DX+x7Jzm+XyIvTalP5tHw825fo2/5vDB4vVZjqw4Df/RKj7fp/Nh
Apfu4EjTcDjqSwRI8iF3aerdKTkaYp98/tNP8cFjl3rQ6AwaNExKI3sFPJBP
zLPrm0mD00iWNvrWgvrnxmqdKjT0JIVXdiJ96C5cX1+rScOKexWZig086HVr
T328kIaMn8bj+RU8SI7x3H9vCQ3ZKbPMEu/zgBg7Jpu0jIYO8wI928s8eKSG
90WtpOG92K+5yqE88N58vjh4NQ1v73xO1z/Eg7ePr7t5W9JwJ2Gu89r1PAgf
0lqy3YaGRC1jDVjBgxWzCgnHjTQotTwoDJrPg4zTz7MYJxomm8Xvtwu5cGTt
6Ki0Fw2fjvyK67zBBa0TJ2vpfTTIxCxM4Edw4WM2lSg4QMNIdlrcqQNcsJBQ
WtnrR4PbH83/9JdzQb7V9GxxOA22Pnbtzc84UE83OOWep+HaprZu1dscCFy2
ZUF6DPr9bvuTR+c40Jfq/fp8Ig3b321j567loLnFKbln0fBn52ROfSkN3nGz
v9vn0ODi6nl2ZRINc57drrDMQ/Prlcr6fYiGcK2ynXqPaIhns8wNNRDvP3vv
UXVoHo0f2GJnKBBX9Q2efEFD8NXsriJn5AP7SfuRRhrGv5pr3llEgdYjiYn2
d6gf35qh/e/YMBFoZHa3jwbpjuC86FlsSJ0W0baJ5sBQpUT+j0gCLsxcerSM
z4FtFYec3DYQEKzzUUZTkgN+M/eJpmQI2L1Bd71wOgfcn78afpeIvoMvv6/N
0uKAvc7+DYuS0PeCkvaDKRsOhEVPO/98SMj80noZdesyB2Ja9ndw9v5mepcf
1ZZO4sCCmw9W3H0+xrStm/P85BUOHK7ULvDQGGPKfA6TdpkcEFKxXcqfRpnw
+8r+goccMDZxbYxbM8LMMt63Z2MHB96lpV+XG/jKSFkrUCVdHHD82XzILqaH
IV0q09V7ODCeWq52Tb+b+RYg1zU5hOq/2D+YGfCJKagsdcgUcqD8b/13B14r
c6t59y9JggupuOJWE+s3THK3VKw/zYV178rS1kU2MafYu15ukOTCRbM06pj0
U+agvOR/T2S5MNF9a21ldAWzQ+MxrT6DC5baeikXZYuYzUY7bsbM5MLam806
jFwmY2UpbjqpwgUJ1dpKl5DaVf8DGqcFuQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7eXJ5/xbkfMAAxh8sN/kZPRxw2IOOF/aJmx+mioS
3y9ZZLIwO5xf9Nbw1RNhNjg/7WvuZitJVji/QyZ/aiAnC5zPeNHwRi83M5y/
YslO4+4fjHD+2wfrmnpeMcD5wqGnU9Lu/t8P4y9XO/zVdPdfOP+lkJ1HwN7f
cH7mhcmNRSd/wvkuZ4rfiK3+DueffXRNgm3jVzh/o/mRsvKez3D+pdie3R8K
P8L5TrbrmzO/v4Pzp1lHff669RWc757P/Ux87zM4f538RWu7/EdwvtzTGfte
ZN2B82d+nc3d0HEFzv//r9/W4cdxOL/2AuODNcwb4PykSfdmBUxcZw/jz7CT
M8yddwLOn8y4TVzC+gqcn/dq84UPF+7A+Vruyt9D5j+C8w8mP2Oa0/sMzl/E
PHX1vQuv4Hy1PNuL3affwfkS0jOmiER+hPMPObDzPyz7DOfv8/58PKngK5wf
LxHqnzTlO5wfdMpYVHzKTziffbX5l8Odv+H8JN+NC9+t/Avn811d3ntu6X84
X5+fS0XsGYMDjG95+hKv4xdGOP/1z5vT3D4wwfkFnDLs3YwscP787jliqxhY
4Xy9peuNjv5C8CfO/2sqz8UO58/h6boRzM4B53/WOtO7fAqCD80vcD4AeOIP
Cg==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> 
     NCache[{{-3.1415925253615216`, 3.1415925253615216`}, {
        1 - Pi, 1 + Pi}}, {{-3.1415925253615216`, 
       3.1415925253615216`}, {-2.141592653589793, 4.141592653589793}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"f[x]\"", "\"Fourier Series\"", "\"Fourier Sine\"", 
       "\"Fourier Cosine\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6420145856898108`*^9, 3.642014650418359*^9, {3.642015501025292*^9, 
   3.64201551899778*^9}, 3.642015735115917*^9, 3.642016651264694*^9, 
   3.642016738557928*^9, 3.642016770974319*^9, 3.6420168573011837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Problem", " ", "#8", " ", "part", " ", "c", " ", "f", 
    RowBox[{"(", "x", ")"}], " ", "is", " ", "a", " ", "piecewise", " ", 
    "defined", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"x", ">=", 
           RowBox[{"-", "L"}]}], "&&", 
          RowBox[{"x", "<", "0"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", "x"}], ",", 
         RowBox[{
          RowBox[{"x", ">", "0"}], "&&", 
          RowBox[{"x", "<=", "L"}]}]}], "}"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"L", ":=", "1"}], "\[IndentingNewLine]", 
   RowBox[{"a", "[", "n", "]"}], "\[IndentingNewLine]", 
   RowBox[{"b", "[", "n", "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Here", " ", "is", " ", "where", " ", "i", " ", "form", " ", "sine", " ", 
     "and", " ", "cosing", " ", "series", " ", "expansion"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myFCos", "[", 
     RowBox[{"x_", ",", "M_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", "n", "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "*", 
            RowBox[{"Pi", "/", "L"}]}], ")"}], "*", "x"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], "/", "2"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myFSin", "[", 
     RowBox[{"x_", ",", "M_"}], "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"b", "[", "n", "]"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "*", 
           RowBox[{"Pi", "/", "L"}]}], ")"}], "*", "x"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "M"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Here", " ", "is", " ", "where", " ", "i", " ", "form", " ", "the", " ", 
     "plot"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"myFCos", "[", 
          RowBox[{"x", ",", "10"}], "]"}], "+", 
         RowBox[{"myFSin", "[", 
          RowBox[{"x", ",", "10"}], "]"}]}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"myFSin", "[", 
         RowBox[{"x", ",", "10"}], "]"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"myFCos", "[", 
         RowBox[{"x", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"-", "L"}], "]"}], ",", 
        RowBox[{"f", "[", "L", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Red", ",", "Green", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<f[x]\>\"", ",", "\"\<Fourier Series\>\"", ",", 
        "\"\<Fourier Sine\>\"", ",", "\"\<Fourier Cosine\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Graph", " ", "of", " ", "part", " ", "c", " ", "f", 
     RowBox[{"(", "x", ")"}], " ", "piecewise"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Notice", " ", "that", " ", "the", " ", "jump", " ", "of", " ", 
      RowBox[{"the", " ", "'"}], 
      RowBox[{"x", "'"}], " ", "part", " ", 
      RowBox[{"and", " ", "'"}], "1"}], "+", 
     RowBox[{"x", "'"}]}], "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.642014760632119*^9, 3.6420148509782753`*^9}, {
  3.6420149518435593`*^9, 3.6420149651160927`*^9}, {3.642015116761601*^9, 
  3.6420151402268057`*^9}, {3.6420151807693157`*^9, 3.642015190203176*^9}, {
  3.6420152346522818`*^9, 3.642015309358324*^9}, {3.642015357924906*^9, 
  3.642015472181744*^9}, {3.642015565796475*^9, 3.642015591765852*^9}, {
  3.642015728653399*^9, 3.642015728753049*^9}, {3.6420168885899076`*^9, 
  3.642016921748642*^9}, {3.642016966375435*^9, 3.642016982245552*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sin", "[", 
   RowBox[{"n", " ", "\[Pi]"}], "]"}], 
  RowBox[{"n", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.642014859095645*^9, {3.6420150920364923`*^9, 3.642015140946973*^9}, 
   3.642015190940311*^9, 3.642015236146245*^9, {3.6420152759755573`*^9, 
   3.642015310155713*^9}, {3.64201536325679*^9, 3.642015473299885*^9}, 
   3.6420155927551203`*^9, 3.642016924897387*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"n", " ", "\[Pi]"}], "-", 
   RowBox[{"3", " ", "n", " ", "\[Pi]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "\[Pi]"}], "]"}]}]}], 
  RowBox[{
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox["\[Pi]", "2"]}]]], "Output",
 CellChangeTimes->{
  3.642014859095645*^9, {3.6420150920364923`*^9, 3.642015140946973*^9}, 
   3.642015190940311*^9, 3.642015236146245*^9, {3.6420152759755573`*^9, 
   3.642015310155713*^9}, {3.64201536325679*^9, 3.642015473299885*^9}, 
   3.6420155927551203`*^9, 3.642016925162401*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0]], 
       LineBox[CompressedData["
1:eJxFxVtMUgEABmBvtW6utRqmo0JKxCx6cCMpHQ+5prmFCTblxExcUaTJJFe2
pia0dSPGyAZFOAdMLLWeWsPWSbKs1DbmQtJJSEFcwjT1IVqzeug/D9++TGlD
+YmkhISEfX/9m8OnRZaXv5P/F8mzr/6MU1/syGctLFEPR8XSYJT6uKFzcnSC
WjfPHjE+ol607O/Nq6Z2rKo5K3s+i1vH3NHBmhgO29LT9tK/4Z2filevn45g
60bL4sf2MH5JvNOQ/BCmd9IZhpkgLj1ANI9fC+Btv0625ZR8wbv777c1xvzY
d66L47bP4NMmncUk9+HKlqrtvUwvZkdzCJF5Cp85XHbF/9mDxUpBIZfrxnoy
VEY+Gcf8JM9RTqILyz1OhW1hFBcYL292XBjGp6bnp6rSnFjg29X3ZocDc8l7
ExF1P85YlxI251H/rqyLl/v78NCPgi0DfGohyyu9EX+IFRrGbK6iB/cQtpR6
wopv2lNpmWuoFUtN2R+eWnC+9uChQhr1a+dXbaqri1oo4h7TmDFvTlLrrb2N
6xzW8PkhPTarow0bsqiT05svFQV12Khi51a4buEXrA5tbFKNswaYJoZJha8L
HtuFknbcPXdHpSRb8Xt9cmjt2yZseLY1sbFUiaUBXoZnTIEj9T5DsU2GW0ja
yKYHUsxk3o0PSghc8mpltVh2BPNW7On2BYrwH68/CKo=
        "]], 
       LineBox[CompressedData["
1:eJwdxX081HcAB3CdLo1phqspJU9NZ8WKSqVP42rkJGSp1eVhtVpPMtVYD6Sz
td08xMh5qLnzlOOI6Wp3ZWRqY+I8VdxQ2Zy63y/OY/Rt+uP9eluGHPPbx9DR
0XH/3/QuTIf87mcc9DwzlWcyaFzI2f+vbNQDLc/NRxfp0lhQsvk9TvhnkDTp
JmUyaUQxj7QGOAUhtlLNnj+bRl/5KtFFh33YldF0N02fhn+IznEF+yt8HC3j
sQxppP7jGXfJKBzd0xnTqK9cfuSj+AjcmM6UBiPeZPsfBqfwtnk0jq3vspyY
dRpvM6ch5spUpa/PIz1METxlSwMydvMZ1wsICxC/irKj8cg6q3bLaT481v74
8xibhtGrGMnT8e8worvz/pADjTOFXlEfDAvgn6Z1VLvQsI+l9KtOJMPwtr1O
uzeN3etMZhdbpeAFd3HFD9toCIZWMYWNKfj7semBDf40NKFnyddLU5E4PtWY
G0jjOsdQ+2HXZZg4P7gSEUpjzSz7rgRONswkETCOpJHDKW+XXhTDVqg46y2m
Ia3TFJ4LlML1pM9UzQQNheefa9ZW30SmWCCyznyJgWs5B7cGVmNPgFPDO16D
yCpenqH9tQ4VrfuSb48MQh4cx3K8UY819aWMvtQhRJmmt/oYN2HRpv3DyRwt
6h+0cJqFSqx0ck6q6NPi+F+rlyTMbUPn4E/3RfxhiBs5rP33OtC/0pdvtmIE
AsmNAj3uY1gPLFPPUI5gRnKLZw1ThSqbE81hMaOYV1hUJ/bohqClNdTPZgxt
+dHWzO97MOBflcS4O4bPi9hx4b29KAlgubscH8f6DL11tbZPkd0Qm9VrPIEn
CTdHbC48w2Dd7m+NqydQYX1uwLKzD4+S7gwbHX2FbtGpFTMX/ge6aZ3Z+TmT
aLbbFD30TT8OplhVRconYSHctPieQg2jBiujp7wppF7bOe4yOQCvVsmk+esp
KO+4PZQFvIB67y+HO6+9xqHfeQYLL2tQGSTlz+EShFx5mCrP0qCs8bCXaivB
rjPbrXaLNCjewH6/xJfAw2WLS0aJBmLz3EzvHQQ2Zc5fmtVqcKlDWC4IIei8
+m4Na1CDo9vievQjCbjRt6LmcCks2bjHVS+PwJ3nPKvEl4KVdL5uewHB2vWl
Sd47KCxc1HEvr4jAbiy3QBBCwXTSb/vmMoKZYUlt+pEUGDKPQ3w5gWLvgRV6
eRRUDk7pukqCCtcnirwiCo+yX/KUrQSSBTzPzWUU2gylNqIOAmG7fxBfTqFh
YGmpm4rgpA/idZUUfsu3qIvpJziy7JaZqINC5dwuge9zgi8MnHPdVBSu84V+
lhSBXx1bHtNPoTCUparSEnjm5n5qSVEQNzeLEkcJNsYuVlZpKVz9JPFg0ATB
6uAMXtAEhcxSbwfHKYLlmKsmhEKahcEwIQRvAJ3mIpw=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAALj8W6v//77+szjbd+v/fP1RqJ4j5
+u+/C9y3qX3S3j96lTgm8/XvvwlTnvgKpd0/x+taYubr7798T6kib0rbP2CY
n9rM1++/V/dXYIOX1j+R8SjLma/vv56gcMD4h8o/9KM7rDNf779iNPtSiUmz
vxrPTEotWu+/THdk7pOqt79A+l3oJlXvv6rX9O9tBry/jVCAJBpL779JNVoF
/1bCvyb9xJwAN++/iq87IVHcyr9XVk6NzQ7vv9NIlUlwp9W/ughhbme+7r/K
g6JhUlniv83fVtj0uO6/DSd28w7S4r/gtkxCgrPuv/aUl8d4SeO/BmU4Fp2o
7r/S9S3XRTTkv1LBD77Sku6/g+CyJWb55b9lmAUoYI3uvy2NSrosZ+a/eG/7
ke2H7r9WmxNAhtPmv54d52UIfe6/WAq+xuan57/reb4NPmfuv/rkANMTP+m/
/lC0d8th7r/22s1WJ6HpvxIoquFYXO6/uwSSq7kB6r841pW1c1Huv/DzCJ5S
vuq/hDJtXak77r8yBtswIiXsvxzrG60UEO6/K3ZXUfKn7r8vwhEXogruv9zD
rhU08e6/QpkHgS8F7r+GZh3h3zjvv2hH81RK+u2/WyWn83PD77/e5FifLfXt
vwAAAAAAAPC/5FwTrA==
        "]], 
       LineBox[CompressedData["
1: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
aw6UTx2NXE842/bbzFBbDv77/HVcHmGXR2VeMfYc6CT+6Z1I7JlhmHA7xZGD
1kOGYVmEWwo8hs45cyBUKhFaE/szlQ1x3YODmSHtOVOJv5tPjqbc38HB27Tf
5SOElejm1ufeHExUso+VJXo1hVyf3+jPgcrYz1UmRM90ZmRQZxCHvA9jqomB
FDa6bXjICyVcvtn5N9F/+tt544YOc7A84ZJKcjCFD5aD68dHc6CV55dlReLp
qHOBqZ7Iwfg2Cx/5MAoK50MWLUzh4KHytPELSD68n2oTYZrOQXzDp1++JF/W
D/LknfM4MLZyt7eLpjA1oMrDq4ADAyt0CUi+vetMuxpcxIHtu3265bEUHOpM
zJJKyH7df+bePElhysop8Tn3Ofj04C2nPZnCm1tfGwsfceDjOS9jIcn/tZnx
vk9rORiKvVFglkPBbldz2o9WDtI98pSGiyhM/HytY7STA6jYZljdpPBybaSO
fA8H7LW/b924S+pxybxKPSEHZr4ya3tI/dqMBnO3j3KgNLU0/ftbCuPCsDRw
AhcvGJoBdqQf1HBnRIdP5mKXW3dp9WdSD42VipnKXPy2sa+e2UPBKn+yZb0e
F5spfyP7EaKn33Dl6kVcvKoYrlxM5heWYa/5k2VcCHy0dFfJ0kiqemF615KL
w47fBp7NpNHSecw4y5kLi6PNyiHGNAJUhxbuPMaF9yLr4BHyvpgz2bfa47lw
+b503OBxGvK3WvQ3J3NxnqMnnZJMo9ysTG9NDhf7P2UeTblIQ+IRpLXwNhdK
HeZydbU0MnOZqr9bubAzlQn1VRbDd2fT+f1dXPj9ZfL6vboYK/Wezxb0kPVi
GTAWiNFVka/yVcSF5qC3mr+lGHqtHkp143qxuofOQoAYVTM+TE4z6oWKRd7W
rGoxOBmVw7qJvVCT+e4oCJbAuPiMKDGlF/h70phLhATxz3Z1c9N7UbW09HpZ
nASaQtnX1y/0gufa9ZdlrgReti65umW9mHb3RkNctQQdQ6IVul29KD1id08q
J4W+/HP9xJ5eZLtuS/5rphQRWlnqXG4vNH6bKatpSDFro5nM9YFeCJJKvr1Y
LIXLzYRPOrI87Nv4pfrSJikat2mE6Szjod2y3f71GSnUDwzsTljJwymf2/G1
OVIEJb3YyrHgodA3MyH7ohRyDwJtrjF4eLY/zuPpTSm2vrM0kdnAw9cToz+V
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
/EHsqk0/E5v68P//jzvO5v8AzBss8A==
        "]], 
       LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAA+QBPz0z17T8AAAAAAAAAQJ/AUPLq
9u0/XDvt14f2/z+mMBmD9PvtP9bVmEtY1/8/rKDhE/4A7j8x/YjKerf/P7iA
cjURC+4//jBBWLZ1/z/SQJR4Nx/uP/hVyM4M6v4/2LBcCUEk7j9eW2R1csX+
P98gJZpKKe4/4/I2/Sug/j/sALa7XTPuP+V1eFKcU/4/BcHX/oNH7j+Z/8Cc
f7L9PwwxoI+NTO4/G0PIkpGI/T8SoWggl1HuPyfOLqj7Xf0/HoH5Qapb7j83
IWAG2wb9PzhBG4XQb+4/fA6UedxQ/D9rwV4LHZjuP8y7BGC4xvo/Yp/Zlryd
7j9ls+RCnoz6P1p9VCJco+4/bs37i8ZR+j9IOUo5m67uPyaZi4Ll2fk/JLE1
ZxnF7j/vjLlUkuH4P9ygDMMV8u4/V9WsUn3Q9j9MgLp6DkzvP8Lj523IPfI/
Q141Bq5R7z++ocrqZfDxPzo8sJFNV+8/gQg7lpai8T8o+KWojGLvPxWJ3kG+
BfE/BHCR1gp57z8szb01BI/vP71faDIHpu8/FSd38pd36j+0PeO9pqvvP9BX
XERV0uk/rBteSUax7z9GWAdapSzpP5rXU2CFvO8/XeCbYxrg5z92Tz+OA9Pv
P1ipS4YhQ+U/bS26GaPY7z+q2T5PPpvkP2QLNaVC3u8/OCIorCfz4z9Sxyq8
genvP1a5emp9ouI/SaWlRyHv7z9fn/53+PnhP0CDINPA9O8/LW+RcF1R4T83
YZteYPrvP9r2i6+zqOA/Lj8W6v//7z+pmGSRAgDgP6FrMrk=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0]], 
       LineBox[{{-0.9999999591836735, -1.224489797746162*^-6}, \
{-0.9993865641839172, -0.018402656802720022`}, {-0.998773169184161, \
-0.036801583488979814`}, {-0.9975463791846487, -0.07358190169430423}, \
{-0.995092799185624, -0.14700236884540152`}, {-0.9901856391875744, \
-0.2927254734374812}, {-0.9803713191914754, -0.5753408267584788}, \
{-0.9797579241917191, -0.5924465615284734}, {-0.9791445291919629, \
-0.6094731055098623}, {-0.9779177391924506, -0.6432799125799795}, \
{-0.9754641591934259, -0.7098485386153438}, {-0.9705569991953763, \
-0.8383446425042511}, {-0.9638074678128171, -1.}}], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQrWcv9ur///f7GcDggf2XxdZrjOMR/F0ciXnp+97B
+fVnr70+mPgWzn+5VFLcXOYNnK9134OT/+4rOH+J8OIvN5tewvmHo0/17rd/
AefLzJdRmPHwGZzv7RxdebnzKZwv/zutQdPzCZyvu25uQ9HbR3D+g5KFetdW
PITzM+dMXDwn6wGcH1EXqbxG6R6cr/FaMzpk3m04P9svoPXR4xtwflSxv62Z
2TU4f/L+FwH7t12G8+2ZboTpMV6E87NuHCpY+vkMnG8zs1FiV8VxOD/j7sfb
keKH4Hz/BzprT6jsgvPN9s++/qplHZxv+SE2+V7yFDhfu/k914HSyfYw/vrj
71bWR6yH8/d6nrKwOrQTzn+9alGmX8QhOH/uWr3ZX7Yeh/P3JLaJGmw/A+dX
icy86i90Ec4/c+GKy6VZl+H8wtPmav1i1+D8JeddRNNO3IDze9ZsX8HucxvO
Z5x8xfMw6z04X3zl6uNLPB7A+deWNyizdjyE86NXa7UVPXoE59vMZrc+qvoE
zn/cv/ObSstTOH+Lcv1rxTvP4PwHi8uNWGRfwPmXNFwbPle8hPPlZ7kqnNj7
Cs6ftiryp+Wf13D+5f1ON3eEvoXzsw/GccvOeAfn+zTsquLzeQ/nQ/MLnA8A
4IgeUQ==
        "]]}, {}}, {{}, {}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{-0.9999999591836735, 0.9999999591836735}, {-1, 2}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"f[x]\"", "\"Fourier Series\"", "\"Fourier Sine\"", 
       "\"Fourier Cosine\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.642014859095645*^9, {3.6420150920364923`*^9, 3.642015140946973*^9}, 
   3.642015190940311*^9, 3.642015236146245*^9, {3.6420152759755573`*^9, 
   3.642015310155713*^9}, {3.64201536325679*^9, 3.642015473299885*^9}, 
   3.6420155927551203`*^9, 3.642016944181744*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Problem", " ", "#7", " ", "part", " ", "d", " ", "f", 
    RowBox[{"(", "x", ")"}], " ", "is", " ", "a", " ", "piecewise", " ", 
    "defined", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"x", ">=", 
           RowBox[{"-", "L"}]}], "&&", 
          RowBox[{"x", "<", "0"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{"x", ">", "0"}], "&&", 
          RowBox[{"x", "<=", "L"}]}]}], "}"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"L", ":=", "1"}], "\[IndentingNewLine]", 
   RowBox[{"a", "[", "n", "]"}], "\[IndentingNewLine]", 
   RowBox[{"b", "[", "n", "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Here", " ", "is", " ", "where", " ", "i", " ", "form", " ", "sine", " ", 
     "and", " ", "cosing", " ", "series", " ", "expansion"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myFCos", "[", 
     RowBox[{"x_", ",", "M_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", "n", "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "*", 
            RowBox[{"Pi", "/", "L"}]}], ")"}], "*", "x"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], "/", "2"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myFSin", "[", 
     RowBox[{"x_", ",", "M_"}], "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"b", "[", "n", "]"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "*", 
           RowBox[{"Pi", "/", "L"}]}], ")"}], "*", "x"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "M"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Here", " ", "is", " ", "where", " ", "i", " ", "form", " ", "the", " ", 
     "plot"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"myFCos", "[", 
          RowBox[{"x", ",", "10"}], "]"}], "+", 
         RowBox[{"myFSin", "[", 
          RowBox[{"x", ",", "10"}], "]"}]}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"myFSin", "[", 
         RowBox[{"x", ",", "10"}], "]"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"myFCos", "[", 
         RowBox[{"x", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.3"}], ",", "1.3"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Red", ",", "Green", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<f[x]\>\"", ",", "\"\<Fourier Series\>\"", ",", 
        "\"\<Fourier Sine\>\"", ",", "\"\<Fourier Cosine\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Graph", " ", "of", " ", "part", " ", "d", " ", "piecewise"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Notice", " ", "that", " ", "the", " ", "graph", " ", "switches", " ", 
     "form", " ", "0", " ", "and", " ", "1", " ", "at", " ", "the", " ", 
     "origin"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6420156324581337`*^9, 3.642015719805019*^9}, {
  3.6420170180396423`*^9, 3.642017040938817*^9}, {3.642017140573409*^9, 
  3.642017141978827*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sin", "[", 
   RowBox[{"n", " ", "\[Pi]"}], "]"}], 
  RowBox[{"n", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{{3.6420156474556704`*^9, 3.64201568466562*^9}, 
   3.64201572023543*^9, {3.6420170220861807`*^9, 3.6420170425258703`*^9}, 
   3.64201714246481*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", 
   RowBox[{"Cos", "[", 
    RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
  RowBox[{"n", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{{3.6420156474556704`*^9, 3.64201568466562*^9}, 
   3.64201572023543*^9, {3.6420170220861807`*^9, 3.6420170425258703`*^9}, 
   3.642017142535371*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0]], 
       LineBox[CompressedData["
1:eJxFz1tIk3EABfB5KbpJRDFTVs2Vc2atB2FpKXtIQhOauRm6LzEntVqawyVl
hJpb0G2NsYyt1kS24Sy1niJm9KVZVmowpLkU11xpuzTT1IcWYQVx/gcOh9/j
SZHVFp+IZTAY+/723/KFzNDy8nea8T8SRdrVn1Hii61Z3IUl4sGwVDYTJj5u
bBsfHiPWz/OGTI+IF637uzIriJ2rKs/Kn8/CTSPucF9lBA7akxL3sr7BOz/l
r14/GYJtG62LH1uC8EvqnZYWBmBWG4ttnJqBCw9QDaPXpuFtv042pxd8gXf3
3G+ui/hh37l2vtsxBZ82661mhQ8ubSzb3sXxwrxwOiWxTMBnDhdd8X/2wFKV
KFcgcMMGOlBEPxmFhbGeo/wYF6zw9CvtC8NwjunyZueFQfjU5PxEWWI/LPLt
6n6zwwkL6HtjIU0PnLwuPmjJJP5dWh0t9nfDAz9ytvQKicVcr+xG9CGs1LJn
M5SdcCdlj6+hbPBNRwIzZQ2xcqk+7cNTK5ylO3gol0n8uv+rLsHVTiyWCI5p
LXD2XHmVt+o2XO20Bc8PGGCLJly7IZU4LqnhUt6MHjapeRklrlvwC26rLjKu
gVN7OWa2WQ1fFz12iMtb4I65O2oV3QS/N8QF1r6th43PtsbUFapg2XR2smdE
CYdqfMZ8uxxupJlDmx7IYA7nbrSvnIILXq2skMqPkP8r9nT4pvPgP2cQBUk=

        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQbcmqv/zBUxd7BjD4YN+yKO35ju8ecL70Ojd+l6Iw
OL+KNfdqqEkCnB+cxFC4VysLzp9237NtkkARnJ9vc1fxF1sNnL/EZ8e9Df+a
4Pzald5VEl974Hzt5vdcB0onw/mLXDZfX9+5BM5ff/zdyvqI9XD+Xs9TFlaH
dsL5r1ctyvSLOATnz12rN/vL1uNw/p7ENlGD7WcQ/hGZedVf6CKcf+bCFZdL
sy7D+YWnzdX6xa4h3H/eRTTtxA04v2fN9hXsPrfhfMbJVzwPs96D88VXrj6+
xOMBnH9teYMya8dDOD96tVZb0aNHcL7NbHbro6pP4PzH/Tu/qbQ8hfO3KNe/
VrzzDM5/sLjciEX2BZx/ScO14XPFSzhffparwom9rxDxsyryp+Wf13D+5f1O
N3eEvoXzsw/GccvOeAfn+zTsquLzeQ/n69mLvfr/H8EHALtpuzE=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
VZldYHLAVXyRWE7288N289TMPrL+8S/VrgeJ7+0w31A5yMGdZ/Gl80g+zHGq
utw8Sj6PmnVwHcmX1p3m3Zy/HEztqO+IDuJjr6t5rOxULpZ8qK3LI/mmvruq
VXkGF05CTZUQko98d3NN/VlcGFCjvcHn+AjxMq93V+AiaM3ZDX8T+Ni4t0rp
mCIX0qPyUREkn//zNT8Zo8qFDZ+VrZ3KR8J+c/nC1VxsTy66MyeHj9wj5j5j
m7lQd0uP7HzOh9+xqudSW7hQSbq39/UbPlYeN5++1JYLyQfn1Ssq+HgRZF5s
7syFa4P+TJs6Pr6eMR9L8udiXP3WDksuH4nhVdb5x7iYLJEIOED8emekeVZp
EBf78+75PCG+2x1jbkqP4OLup5RFL4iPjsSbX1qVzMU/RbVpZ4kvLk03V6x+
y4VG8YVl5wMoeHLv9b6v4OJkd3RDQRCF3PUyD19/4sKo/rFcbzjp99qbNz5s
4KI3Lq3yeRIFrUX73VJYXNgZpahfKSU+efNiio90P9ycYv6WiQvgmls3Q9S9
H7GlrprG7qReDa75Me7VD5uhxaU/vIlPmKZlDO3rh1SCPP8Q6ee9mZ4afUcJ
J91C+nEBDqgMWtbF9ONjb0dPL/GhkPy50VlF/dgxz9y+roTUj5EQ69TH/dA3
eVOi/Zr4lkXHrMTn/XB8aqV4sVyAiN472THl/XiQ9bxK6YsA59X1yw796IeG
hcr+9i4BUu67/Db82w9eSNExjoQQ/ba0oVuiPCQ8SFnJlRLC5JezQHwqD3kJ
a3KaZYXgGjn3Nszi4efCjHdH5IUw/raz6cByHvbPy595eaUQ144119et5EGP
saClRVuIvnk7v+rp8rDR/7v/VD0hkjycKkU38sArPD9n3kYhWNSOxzcceLAd
Du5q2irE+uvfiyZ38TB0fWGB4XYhLhvsKPB150GloeHIGQchDCIdbuns5+EO
P0o511mIBNXG9NQAHpjZPnci3YRgfLZPmQjkIfq3tYOxhxCXZtsnfD7DQ1B6
jY/NXiG6n9fHrY7mwd5Y60CmrxDr3OxikuN4cNhq2fzRT4j4ybrwPwk8RH17
/K/mgJDUr+2nva7x0DF5aF3BISH0rOqCPqXxME2hp9E9QIiLPNvAVTd5eDpL
QrP/sBBdV2sDrt3mwd9wS+r2o0Ks1bM98LuAh+ldb49dPCbEBdo3nz3FPJhW
yc/PCBSi88w2z6qnPCRequmOOC7EGqVvbpqlPBhN+b3G6IQQcR9tdiWW8WC4
OzvgM+GOg18dRitJvGxShBonhdCdaWPr/pmHl1I3VPYQPv/0y5bKWh5ajXYH
+BL+uWur+YofPIQ9TF67kbDO3xqTKzQeWHMlWSwyXmy29YbhThKPiBv9HoTb
zWr03Xp4WN289cVdMh9tzpY17zk8tMxxL31H5nsu4bPWcoqH0pNbfPPJetp0
tmgkDPGgHkrTdiPrXd1crfrrNw9X3q263kHiERNqtcxlkgeDtzXTV5F40ZZU
L3onNoArTnkyW0g8tSot5VQlB/DbZIWSDol3tN+nOfEzB2BlZ/uxZ58QrVKW
M4VzB/Dl3I3wvT5CrHr0UXKX/AAUxVY1FXkJEeVoIfF26QA+NTTYlZP9Xpll
PhGnMQANq2H+ZpIfkZuqxvirB3CYka/71FGIZpbZkKPeAHb9ZnZy7YSI0DLr
VzQZgP6p8MbHVkI0NVayY80HwF1GtzcxE0IjeDODZz0A9QTmvWQI8f2dKe2l
0wCUYpNOXCP53LZa6mCFK/l996YLaSTf6be+j3/ZM4Ch4e1FBzWF4IX7LOo6
MIBv1xXlTyoKMUitfNB3eACj03Q5ReT8/N4zvHHw+ACE07bWPZorhIRJ7B7x
swN4qb1QbNE0IWY8shXIRA+goaaaGyUqxBzFBZFycQNYe+esXMk46cdECnI1
kwaw8EnJ9VCeAIbln1n2+QOwKbN5cu4b6We0k4LcCgeQXx/lZVpF+oFs16m+
jwZgq3VW9/Mb0h9F9KuHvBqAg50cbW2hAP4m0v43awcQWRGkEXVOgFvldoPc
kQEscNvrNLBagHzthdFDfwbgU7ZjvwXpR4uyu+f8E+Hjmx3f6YCcAC8jAvVm
SfHhmEnNlBYh/YLJ9RD9pXzYDN4/l3WDgvj7ln/Rlv/7O6+VX569JL6ik30l
wYbUFf8ci/J0Pmbn7FdMteeDuWrdcZ8wPpZE/t50n9TR3aIy9BBjPgw2KZyr
P8LHaH/J+u63Azj03kNqcRofSVczFhrd58H7Fi3lTRYfaieUBZ2RPLiecVTa
fZt40PeHqjNdeLAytDbMKOZD7sjN7QslyL3yWM9vIfE67QWFL0Zc+/Eze0bl
vEE+Lmrocv8JOLCJeBUqY0NhYYST2nArG5s99CSK7Snk0aP2cPLYWL/hUeK2
XRREL6bLZJI+SX3sTsElbwqnJncnmk1lQ+xoYrPkKQp9j9X9aTosvN2zX3dq
PoWQ66LKtDNMPNvIfJtfSMFYwvT5HQsmihQ8tlg8ptCh9SPMfiYT6S07PM+9
oVBs+cZoezYDQdtxecp3CucH/ecrvu9GwKpXC2+3UvhZPVGtdKEbPlJ6d0w7
KTj+uC49374bDp803kRyKByZ3zG/hU7Hljt3LJdRFLaFlJreK6DDJFrxe/kQ
han1t2tPHKVD3yvDw3Ocgp9WAWVkQMf//78FGMYtaxcRoeP/AMWYoe4=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0]], 
       LineBox[CompressedData["
1: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
31vY/H8zvRCo
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQrWcv9ur///f7GcDggf2XxdZrjOMR/F0ciXnp+97B
+fVnr70+mPgWzn+5VFLcXOYNnK9134OT/+4rOH+J8OIvN5tewvmHo0/17rd/
AefLzJdRmPHwGZzv7RxdebnzKZwv/zutQdPzCZyvu25uQ9HbR3D+g5KFetdW
PITzM+dMXDwn6wGcH1EXqbxG6R6cr/FaMzpk3m04P9svoPXR4xtwflSxv62Z
2TU4f/L+FwH7t12G8+2ZboTpMV6E87NuHCpY+vkMnG8zs1FiV8VxOD/j7sfb
keKH4Hz/BzprT6jsgvPN9s++/qplHZxv+SE2+V7yFDhfu/k914HSyfYw/vrj
71bWR6yH8/d6nrKwOrQTzn+9alGmX8QhOH/uWr3ZX7Yeh/P3JLaJGmw/A+dX
icy86i90Ec4/c+GKy6VZl+H8wtPmav1i1+D8JeddRNNO3IDze9ZsX8HucxvO
Z5x8xfMw6z04X3zl6uNLPB7A+deWNyizdjyE86NXa7UVPXoE59vMZrc+qvoE
zn/cv/ObSstTOH+Lcv1rxTvP4PwHi8uNWGRfwPmXNFwbPle8hPPlZ7kqnNj7
Cs6ftiryp+Wf13D+5f1ON3eEvoXzsw/GccvOeAfn+zTsquLzeQ/nQ/MLnA8A
4IgeUQ==
        "]]}, {}}, {{}, {}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{-0.9999999591836735, 0.9999999591836735}, {-1.3, 1.3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"f[x]\"", "\"Fourier Series\"", "\"Fourier Sine\"", 
       "\"Fourier Cosine\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6420156474556704`*^9, 3.64201568466562*^9}, 
   3.64201572023543*^9, {3.6420170220861807`*^9, 3.6420170425258703`*^9}, 
   3.642017146339707*^9}]
}, Open  ]]
},
WindowSize->{988, 591},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification->1.5,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 267, 4, 43, "Input"],
Cell[CellGroupData[{
Cell[850, 28, 6092, 144, 469, "Input"],
Cell[6945, 174, 367, 8, 66, "Output"],
Cell[7315, 184, 392, 9, 66, "Output"],
Cell[7710, 195, 63622, 1127, 371, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71369, 1327, 5051, 138, 519, "Input"],
Cell[76423, 1467, 392, 9, 66, "Output"],
Cell[76818, 1478, 571, 15, 67, "Output"],
Cell[77392, 1495, 80813, 1412, 359, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158242, 2912, 4640, 121, 494, "Input"],
Cell[162885, 3035, 421, 9, 66, "Output"],
Cell[163309, 3046, 670, 17, 67, "Output"],
Cell[163982, 3065, 74773, 1314, 372, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238792, 4384, 4075, 111, 469, "Input"],
Cell[242870, 4497, 300, 7, 66, "Output"],
Cell[243173, 4506, 326, 8, 66, "Output"],
Cell[243502, 4516, 82674, 1441, 390, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
